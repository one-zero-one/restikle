<?xml version='1.0'?>
<signatures version='1.0'>
<constant const='true' declared_type='CGFloat' name='ABPadButtonHeight' type='f' type64='d'/>
<constant const='true' declared_type='CGFloat' name='ABPadButtonWidth' type='f' type64='d'/>
<constant const='true' declared_type='CGFloat' name='ABPinSelectionViewHeight' type='f' type64='d'/>
<constant const='true' declared_type='CGFloat' name='ABPinSelectionViewWidth' type='f' type64='d'/>
<constant const='true' declared_type='NSString*' name='SVProgressHUDDidAppearNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='SVProgressHUDDidDisappearNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='SVProgressHUDDidReceiveTouchEventNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='SVProgressHUDDidTouchDownInsideNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='SVProgressHUDStatusUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString*' name='SVProgressHUDWillAppearNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='SVProgressHUDWillDisappearNotification' type='@'/>
<enum name='SIMPLE_PIN_LENGTH' value='4'/>
<enum name='SVProgressHUDMaskTypeBlack' value='3'/>
<enum name='SVProgressHUDMaskTypeClear' value='2'/>
<enum name='SVProgressHUDMaskTypeGradient' value='4'/>
<enum name='SVProgressHUDMaskTypeNone' value='1'/>
<enum name='TSMessageNotificationDurationAutomatic' value='0'/>
<enum name='TSMessageNotificationDurationEndless' value='-1'/>
<enum name='TSMessageNotificationPositionBottom' value='2'/>
<enum name='TSMessageNotificationPositionNavBarOverlay' value='1'/>
<enum name='TSMessageNotificationPositionTop' value='0'/>
<enum name='TSMessageNotificationTypeError' value='2'/>
<enum name='TSMessageNotificationTypeMessage' value='0'/>
<enum name='TSMessageNotificationTypeSuccess' value='3'/>
<enum name='TSMessageNotificationTypeWarning' value='1'/>
<enum name='TSMessageViewAlpha' value='0.95'/>
<function name='NewBase64Decode'>
<arg const='true' declared_type='char*' name='inputBuffer' type='*'/>
<arg declared_type='size_t' name='length' type='L' type64='Q'/>
<arg declared_type='size_t*' name='outputLength' type='^I' type64='^Q'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='NewBase64Encode'>
<arg const='true' declared_type='void*' name='inputBuffer' type='^v'/>
<arg declared_type='size_t' name='length' type='L' type64='Q'/>
<arg declared_type='_Bool' name='separateLines' type='B'/>
<arg declared_type='size_t*' name='outputLength' type='^I' type64='^Q'/>
<retval declared_type='char*' type='*'/>
</function>
<class name='ABPadButton'>
<method selector='borderColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='hightlightedTextColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='initWithFrame:number:letters:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSInteger' index='1' name='number' type='i' type64='q'/>
<arg declared_type='NSString*' index='2' name='letters' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='letterLabelFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='lettersLabel'>
<retval declared_type='UILabel*' type='@'/>
</method>
<method selector='numberLabel'>
<retval declared_type='UILabel*' type='@'/>
</method>
<method selector='numberLabelFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='selectedColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='setBorderColor:'>
<arg declared_type='UIColor*' index='0' name='borderColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHightlightedTextColor:'>
<arg declared_type='UIColor*' index='0' name='hightlightedTextColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLetterLabelFont:'>
<arg declared_type='UIFont*' index='0' name='letterLabelFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLettersLabel:'>
<arg declared_type='UILabel*' index='0' name='lettersLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberLabel:'>
<arg declared_type='UILabel*' index='0' name='numberLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberLabelFont:'>
<arg declared_type='UIFont*' index='0' name='numberLabelFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedColor:'>
<arg declared_type='UIColor*' index='0' name='selectedColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type='UIColor*' index='0' name='textColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
</class>
<class name='ABPadLockScreenAbstractViewController'>
<method selector='cancelButtonDisabled:'>
<arg declared_type='BOOL' index='0' name='disabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='currentPin'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='deleteFromPin'>
<retval declared_type='void' type='v'/>
</method>
<method selector='errorVibrateEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithComplexPin:'>
<arg declared_type='BOOL' index='0' name='complexPin' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isComplexPin'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='newPinSelected:'>
<arg declared_type='NSInteger' index='0' name='pinNumber' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='processPin'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type='UIView*' index='0' name='backgroundView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCancelButtonText:'>
<arg declared_type='NSString*' index='0' name='text' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentPin:'>
<arg declared_type='NSString*' index='0' name='currentPin' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeleteButtonText:'>
<arg declared_type='NSString*' index='0' name='text' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setErrorVibrateEnabled:'>
<arg declared_type='BOOL' index='0' name='errorVibrateEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLockScreenTitle:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleText:'>
<arg declared_type='NSString*' index='0' name='text' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTapSoundEnabled:'>
<arg declared_type='BOOL' index='0' name='tapSoundEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tapSoundEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='ABPadLockScreenSetupViewController'>
<method selector='initWithDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDelegate:complexPin:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<arg declared_type='BOOL' index='1' name='complexPin' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDelegate:complexPin:subtitleLabelText:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<arg declared_type='BOOL' index='1' name='complexPin' type='B'/>
<arg declared_type='NSString*' index='2' name='subtitleLabelText' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setSetupScreenDelegate:'>
<arg declared_type='id' index='0' name='setupScreenDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleLabelText:'>
<arg declared_type='NSString*' index='0' name='subtitleLabelText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setupScreenDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='subtitleLabelText'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='ABPadLockScreenView'>
<method selector='animateFailureNotification'>
<retval declared_type='void' type='v'/>
</method>
<method selector='backgroundView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='buttonArray'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='buttonEight'>
<retval declared_type='UIButton*' type='@'/>
</method>
<method selector='buttonFive'>
<retval declared_type='UIButton*' type='@'/>
</method>
<method selector='buttonFour'>
<retval declared_type='UIButton*' type='@'/>
</method>
<method selector='buttonNine'>
<retval declared_type='UIButton*' type='@'/>
</method>
<method selector='buttonOne'>
<retval declared_type='UIButton*' type='@'/>
</method>
<method selector='buttonSeven'>
<retval declared_type='UIButton*' type='@'/>
</method>
<method selector='buttonSix'>
<retval declared_type='UIButton*' type='@'/>
</method>
<method selector='buttonThree'>
<retval declared_type='UIButton*' type='@'/>
</method>
<method selector='buttonTwo'>
<retval declared_type='UIButton*' type='@'/>
</method>
<method selector='buttonZero'>
<retval declared_type='UIButton*' type='@'/>
</method>
<method selector='cancelButton'>
<retval declared_type='UIButton*' type='@'/>
</method>
<method selector='cancelButtonDisabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='deleteButton'>
<retval declared_type='UIButton*' type='@'/>
</method>
<method selector='detailLabel'>
<retval declared_type='UILabel*' type='@'/>
</method>
<method selector='detailLabelFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='digitsArray'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='digitsTextField'>
<retval declared_type='UITextField*' type='@'/>
</method>
<method selector='enterPasscodeLabel'>
<retval declared_type='UILabel*' type='@'/>
</method>
<method selector='enterPasscodeLabelFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='initWithFrame:complexPin:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='BOOL' index='1' name='complexPin' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isComplexPin'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='labelColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='lockViewAnimated:completion:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='void (^)(BOOL)' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='okButton'>
<retval declared_type='UIButton*' type='@'/>
</method>
<method selector='resetAnimated:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type='UIView*' index='0' name='backgroundView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonEight:'>
<arg declared_type='UIButton*' index='0' name='buttonEight' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonFive:'>
<arg declared_type='UIButton*' index='0' name='buttonFive' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonFour:'>
<arg declared_type='UIButton*' index='0' name='buttonFour' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonNine:'>
<arg declared_type='UIButton*' index='0' name='buttonNine' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonOne:'>
<arg declared_type='UIButton*' index='0' name='buttonOne' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonSeven:'>
<arg declared_type='UIButton*' index='0' name='buttonSeven' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonSix:'>
<arg declared_type='UIButton*' index='0' name='buttonSix' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonThree:'>
<arg declared_type='UIButton*' index='0' name='buttonThree' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonTwo:'>
<arg declared_type='UIButton*' index='0' name='buttonTwo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonZero:'>
<arg declared_type='UIButton*' index='0' name='buttonZero' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCancelButton:'>
<arg declared_type='UIButton*' index='0' name='cancelButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCancelButtonDisabled:'>
<arg declared_type='BOOL' index='0' name='cancelButtonDisabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeleteButton:'>
<arg declared_type='UIButton*' index='0' name='deleteButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDetailLabel:'>
<arg declared_type='UILabel*' index='0' name='detailLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDetailLabelFont:'>
<arg declared_type='UIFont*' index='0' name='detailLabelFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDigitsArray:'>
<arg declared_type='NSArray*' index='0' name='digitsArray' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDigitsTextField:'>
<arg declared_type='UITextField*' index='0' name='digitsTextField' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnterPasscodeLabel:'>
<arg declared_type='UILabel*' index='0' name='enterPasscodeLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnterPasscodeLabelFont:'>
<arg declared_type='UIFont*' index='0' name='enterPasscodeLabelFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelColor:'>
<arg declared_type='UIColor*' index='0' name='labelColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOkButton:'>
<arg declared_type='UIButton*' index='0' name='okButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showCancelButtonAnimated:completion:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='void (^)(BOOL)' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='showDeleteButtonAnimated:completion:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='void (^)(BOOL)' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='showOKButton:animated:completion:'>
<arg declared_type='BOOL' index='0' name='show' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<arg declared_type='void (^)(BOOL)' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateDetailLabelWithString:animated:completion:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<arg declared_type='void (^)(BOOL)' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='updatePinTextfieldWithLength:'>
<arg declared_type='NSUInteger' index='0' name='length' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='ABPadLockScreenViewController'>
<method selector='initWithDelegate:complexPin:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<arg declared_type='BOOL' index='1' name='complexPin' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lockScreenDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='remainingAttempts'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setAllowedAttempts:'>
<arg declared_type='NSInteger' index='0' name='allowedAttempts' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLockScreenDelegate:'>
<arg declared_type='id' index='0' name='lockScreenDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLockedOutText:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPluralAttemptsLeftText:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSingleAttemptLeftText:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='totalAttempts'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='ABPinSelectionView'>
<method selector='selectedColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='setSelected:animated:completion:'>
<arg declared_type='BOOL' index='0' name='selected' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<arg declared_type='void (^)(BOOL)' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedColor:'>
<arg declared_type='UIColor*' index='0' name='selectedColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='JMImageCache'>
<method selector='cachedImageForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='cachedImageForURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='imageForURL:completionBlock:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageForURL:delegate:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='id' index='1' name='d' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='imageForURL:key:completionBlock:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageForURL:key:delegate:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<arg declared_type='id' index='2' name='d' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='imageFromDiskForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='imageFromDiskForURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='performDiskWriteOperation:'>
<arg declared_type='NSInvocation*' index='0' name='invoction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeImageForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeImageForURL:'>
<arg declared_type='NSString*' index='0' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:forKey:'>
<arg declared_type='UIImage*' index='0' name='i' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:forURL:'>
<arg declared_type='UIImage*' index='0' name='i' type='@'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedCache'>
<retval declared_type='JMImageCache*' type='@'/>
</method>
<method selector='writeData:toPath:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSData'>
<method selector='MD5Digest'>
<retval declared_type='NSData*' type='@'/>
</method>
<method class_method='true' selector='MD5Digest:'>
<arg declared_type='NSData*' index='0' name='input' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='MD5HexDigest'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='MD5HexDigest:'>
<arg declared_type='NSData*' index='0' name='input' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='base64EncodedString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='base64EncodedStringWithSeparateLines:'>
<arg declared_type='BOOL' index='0' name='separateLines' type='B'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='dataFromBase64String:'>
<arg declared_type='NSString*' index='0' name='aString' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='attemptsExpiredForPadLockScreenViewController:'>
<arg declared_type='ABPadLockScreenViewController*' index='0' name='padLockScreenViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cache:didDownloadImage:forURL:'>
<arg declared_type='JMImageCache*' index='0' name='c' type='@'/>
<arg declared_type='UIImage*' index='1' name='i' type='@'/>
<arg declared_type='NSURL*' index='2' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cache:didDownloadImage:forURL:key:'>
<arg declared_type='JMImageCache*' index='0' name='c' type='@'/>
<arg declared_type='UIImage*' index='1' name='i' type='@'/>
<arg declared_type='NSURL*' index='2' name='url' type='@'/>
<arg declared_type='NSString*' index='3' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='customizeMessageView:'>
<arg declared_type='TSMessageView*' index='0' name='messageView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='messageLocationOfMessageView:'>
<arg declared_type='TSMessageView*' index='0' name='messageView' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='padLockScreenViewController:validatePin:'>
<arg declared_type='ABPadLockScreenViewController*' index='0' name='padLockScreenViewController' type='@'/>
<arg declared_type='NSString*' index='1' name='pin' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pinSet:padLockScreenSetupViewController:'>
<arg declared_type='NSString*' index='0' name='pin' type='@'/>
<arg declared_type='ABPadLockScreenSetupViewController*' index='1' name='padLockScreenViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unlockWasCancelledForPadLockScreenViewController:'>
<arg declared_type='ABPadLockScreenViewController*' index='0' name='padLockScreenViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unlockWasSuccessfulForPadLockScreenViewController:'>
<arg declared_type='ABPadLockScreenViewController*' index='0' name='padLockScreenViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unlockWasUnsuccessful:afterAttemptNumber:padLockScreenViewController:'>
<arg declared_type='NSString*' index='0' name='falsePin' type='@'/>
<arg declared_type='NSInteger' index='1' name='attemptNumber' type='i' type64='q'/>
<arg declared_type='ABPadLockScreenViewController*' index='2' name='padLockScreenViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SVIndefiniteAnimatedView'>
<method selector='radius'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setRadius:'>
<arg declared_type='CGFloat' index='0' name='radius' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrokeColor:'>
<arg declared_type='UIColor*' index='0' name='strokeColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrokeThickness:'>
<arg declared_type='CGFloat' index='0' name='strokeThickness' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='strokeColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='strokeThickness'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='SVProgressHUD'>
<method class_method='true' selector='dismiss'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='isVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='popActivity'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='resetOffsetFromCenter'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setBackgroundColor:'>
<arg declared_type='UIColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultMaskType:'>
<arg declared_type='SVProgressHUDMaskType' index='0' name='maskType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setErrorImage:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setFont:'>
<arg declared_type='UIFont*' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setForegroundColor:'>
<arg declared_type='UIColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setOffsetFromCenter:'>
<arg declared_type='UIOffset' index='0' name='offset' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setRingThickness:'>
<arg declared_type='CGFloat' index='0' name='width' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setStatus:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setSuccessImage:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='show'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showErrorWithStatus:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showErrorWithStatus:maskType:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<arg declared_type='SVProgressHUDMaskType' index='1' name='maskType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showImage:status:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSString*' index='1' name='status' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showImage:status:maskType:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSString*' index='1' name='status' type='@'/>
<arg declared_type='SVProgressHUDMaskType' index='2' name='maskType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showProgress:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showProgress:maskType:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<arg declared_type='SVProgressHUDMaskType' index='1' name='maskType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showProgress:status:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<arg declared_type='NSString*' index='1' name='status' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showProgress:status:maskType:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<arg declared_type='NSString*' index='1' name='status' type='@'/>
<arg declared_type='SVProgressHUDMaskType' index='2' name='maskType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showSuccessWithStatus:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showSuccessWithStatus:maskType:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<arg declared_type='SVProgressHUDMaskType' index='1' name='maskType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showWithMaskType:'>
<arg declared_type='SVProgressHUDMaskType' index='0' name='maskType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showWithStatus:'>
<arg declared_type='NSString*' index='0' name='status' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showWithStatus:maskType:'>
<arg declared_type='NSString*' index='0' name='status' type='@'/>
<arg declared_type='SVProgressHUDMaskType' index='1' name='maskType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='TSBlurView'>
<method selector='blurTintColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='setBlurTintColor:'>
<arg declared_type='UIColor*' index='0' name='blurTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='TSMessage'>
<method class_method='true' selector='addCustomDesignFromFileWithName:'>
<arg declared_type='NSString*' index='0' name='fileName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='defaultViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dismissActiveNotification'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='dismissActiveNotificationWithCompletion:'>
<arg declared_type='void (^)()' function_pointer='true' index='0' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='iOS7StyleEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isNavigationBarInNavigationControllerHidden:'>
<arg declared_type='UINavigationController*' index='0' name='navController' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isNotificationActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='prepareNotificationToBeShown:'>
<arg declared_type='TSMessageView*' index='0' name='messageView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='queuedMessages'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='setDefaultViewController:'>
<arg declared_type='UIViewController*' index='0' name='defaultViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedMessage'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='showNotificationInViewController:title:subtitle:image:type:duration:callback:buttonTitle:buttonCallback:atPosition:canBeDismissedByUser:'>
<arg declared_type='UIViewController*' index='0' name='viewController' type='@'/>
<arg declared_type='NSString*' index='1' name='title' type='@'/>
<arg declared_type='NSString*' index='2' name='subtitle' type='@'/>
<arg declared_type='UIImage*' index='3' name='image' type='@'/>
<arg declared_type='TSMessageNotificationType' index='4' name='type' type='i' type64='q'/>
<arg declared_type='NSTimeInterval' index='5' name='duration' type='d'/>
<arg declared_type='void (^)()' function_pointer='true' index='6' name='callback' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSString*' index='7' name='buttonTitle' type='@'/>
<arg declared_type='void (^)()' function_pointer='true' index='8' name='buttonCallback' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='TSMessageNotificationPosition' index='9' name='messagePosition' type='i' type64='q'/>
<arg declared_type='BOOL' index='10' name='dismissingEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showNotificationInViewController:title:subtitle:type:'>
<arg declared_type='UIViewController*' index='0' name='viewController' type='@'/>
<arg declared_type='NSString*' index='1' name='title' type='@'/>
<arg declared_type='NSString*' index='2' name='subtitle' type='@'/>
<arg declared_type='TSMessageNotificationType' index='3' name='type' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showNotificationInViewController:title:subtitle:type:duration:'>
<arg declared_type='UIViewController*' index='0' name='viewController' type='@'/>
<arg declared_type='NSString*' index='1' name='title' type='@'/>
<arg declared_type='NSString*' index='2' name='subtitle' type='@'/>
<arg declared_type='TSMessageNotificationType' index='3' name='type' type='i' type64='q'/>
<arg declared_type='NSTimeInterval' index='4' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showNotificationInViewController:title:subtitle:type:duration:canBeDismissedByUser:'>
<arg declared_type='UIViewController*' index='0' name='viewController' type='@'/>
<arg declared_type='NSString*' index='1' name='title' type='@'/>
<arg declared_type='NSString*' index='2' name='subtitle' type='@'/>
<arg declared_type='TSMessageNotificationType' index='3' name='type' type='i' type64='q'/>
<arg declared_type='NSTimeInterval' index='4' name='duration' type='d'/>
<arg declared_type='BOOL' index='5' name='dismissingEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showNotificationWithTitle:subtitle:type:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<arg declared_type='NSString*' index='1' name='subtitle' type='@'/>
<arg declared_type='TSMessageNotificationType' index='2' name='type' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showNotificationWithTitle:type:'>
<arg declared_type='NSString*' index='0' name='message' type='@'/>
<arg declared_type='TSMessageNotificationType' index='1' name='type' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='TSMessageView'>
<method class_method='true' selector='addNotificationDesignFromFile:'>
<arg declared_type='NSString*' index='0' name='file' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='duration'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='fadeMeOut'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithTitle:subtitle:image:type:duration:inViewController:callback:buttonTitle:buttonCallback:atPosition:canBeDismissedByUser:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<arg declared_type='NSString*' index='1' name='subtitle' type='@'/>
<arg declared_type='UIImage*' index='2' name='image' type='@'/>
<arg declared_type='TSMessageNotificationType' index='3' name='notificationType' type='i' type64='q'/>
<arg declared_type='CGFloat' index='4' name='duration' type='f' type64='d'/>
<arg declared_type='UIViewController*' index='5' name='viewController' type='@'/>
<arg declared_type='void (^)()' function_pointer='true' index='6' name='callback' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSString*' index='7' name='buttonTitle' type='@'/>
<arg declared_type='void (^)()' function_pointer='true' index='8' name='buttonCallback' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='TSMessageNotificationPosition' index='9' name='position' type='i' type64='q'/>
<arg declared_type='BOOL' index='10' name='dismissingEnabled' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='messageIsFullyDisplayed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='messagePosition'>
<retval declared_type='TSMessageNotificationPosition' type='i' type64='q'/>
</method>
<method selector='setDuration:'>
<arg declared_type='CGFloat' index='0' name='duration' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMessageIsFullyDisplayed:'>
<arg declared_type='BOOL' index='0' name='messageIsFullyDisplayed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMessagePosition:'>
<arg declared_type='TSMessageNotificationPosition' index='0' name='messagePosition' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subtitle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='viewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
</class>
<class name='UIColor'>
<method class_method='true' selector='colorWith8BitRed:green:blue:'>
<arg declared_type='NSInteger' index='0' name='red' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='green' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='blue' type='i' type64='q'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWith8BitRed:green:blue:alpha:'>
<arg declared_type='NSInteger' index='0' name='red' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='green' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='blue' type='i' type64='q'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithHexString:'>
<arg declared_type='NSString*' index='0' name='hexString' type='@'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithHexString:alpha:'>
<arg declared_type='NSString*' index='0' name='hexString' type='@'/>
<arg declared_type='CGFloat' index='1' name='alpha' type='f' type64='d'/>
<retval declared_type='UIColor*' type='@'/>
</method>
</class>
<class name='UIImageView'>
<method selector='setImageWithURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:key:placeholder:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<arg declared_type='UIImage*' index='2' name='placeholderImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholder:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholderImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='ABPadLockScreenDelegate'>
<method selector='unlockWasCancelledForPadLockScreenViewController:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='ABPadLockScreenViewController*' index='0' name='padLockScreenViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='ABPadLockScreenSetupViewControllerDelegate'>
<method selector='pinSet:padLockScreenSetupViewController:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSString*' index='0' name='pin' type='@'/>
<arg declared_type='ABPadLockScreenSetupViewController*' index='1' name='padLockScreenViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='ABPadLockScreenViewControllerDelegate'>
<method selector='attemptsExpiredForPadLockScreenViewController:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='ABPadLockScreenViewController*' index='0' name='padLockScreenViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='padLockScreenViewController:validatePin:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='ABPadLockScreenViewController*' index='0' name='padLockScreenViewController' type='@'/>
<arg declared_type='NSString*' index='1' name='pin' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='unlockWasCancelledForPadLockScreenViewController:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='ABPadLockScreenViewController*' index='0' name='padLockScreenViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unlockWasSuccessfulForPadLockScreenViewController:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='ABPadLockScreenViewController*' index='0' name='padLockScreenViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unlockWasUnsuccessful:afterAttemptNumber:padLockScreenViewController:' type='v20@0:4@8i12@16' type64='v40@0:8@16q24@32'>
<arg declared_type='NSString*' index='0' name='falsePin' type='@'/>
<arg declared_type='NSInteger' index='1' name='attemptNumber' type='i' type64='q'/>
<arg declared_type='ABPadLockScreenViewController*' index='2' name='padLockScreenViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='JMImageCacheDelegate'>
<method selector='cache:didDownloadImage:forURL:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='JMImageCache*' index='0' name='c' type='@'/>
<arg declared_type='UIImage*' index='1' name='i' type='@'/>
<arg declared_type='NSURL*' index='2' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cache:didDownloadImage:forURL:key:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='JMImageCache*' index='0' name='c' type='@'/>
<arg declared_type='UIImage*' index='1' name='i' type='@'/>
<arg declared_type='NSURL*' index='2' name='url' type='@'/>
<arg declared_type='NSString*' index='3' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='TSMessageViewProtocol'>
<method selector='customizeMessageView:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='TSMessageView*' index='0' name='messageView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='messageLocationOfMessageView:' type='f12@0:4@8' type64='d24@0:8@16'>
<arg declared_type='TSMessageView*' index='0' name='messageView' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</informal_protocol>
</signatures>
