<?xml version='1.0'?>
<signatures version='1.0'>
<constant const='true' declared_type='NSString*' name='AFNetworkingErrorDomain' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingOperationDidFinishNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingOperationDidStartNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingOperationFailingURLRequestErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingOperationFailingURLResponseErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingReachabilityDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingReachabilityNotificationStatusItem' type='@'/>
<constant const='true' declared_type='NSString*' name='RKDetailedErrorsKey' type='@'/>
<constant const='true' declared_type='NSString*' name='RKEntityIdentificationAttributesUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString*' name='RKErrorDomain' type='@'/>
<constant const='true' declared_type='NSString*' name='RKErrorNotificationErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='RKMIMETypeErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='RKMIMETypeFormURLEncoded' type='@'/>
<constant const='true' declared_type='NSString*' name='RKMIMETypeJSON' type='@'/>
<constant const='true' declared_type='NSString*' name='RKMIMETypeTextXML' type='@'/>
<constant const='true' declared_type='NSString*' name='RKMIMETypeXML' type='@'/>
<constant const='true' declared_type='NSString*' name='RKManagedObjectStoreDidResetPersistentStoresNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='RKMappingErrorKeyPathErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='RKObjectMapperErrorObjectsKey' type='@'/>
<constant const='true' declared_type='NSString*' name='RKObjectRequestOperationDidFinishNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='RKObjectRequestOperationDidStartNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='RKObjectRequestOperationMappingDidFinishUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString*' name='RKObjectRequestOperationMappingDidStartUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString*' name='RKResponseHasBeenMappedCacheUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString*' name='RKSQLitePersistentStoreSeedDatabasePathOption' type='@'/>
<constant const='true' declared_type='NSString*' name='RKValueTransformersDetailedErrorsKey' type='@'/>
<constant const='true' declared_type='NSString*' name='RKValueTransformersErrorDomain' type='@'/>
<constant const='true' declared_type='NSString*' name='TKErrorDomain' type='@'/>
<constant const='true' declared_type='NSString*' name='TKStateMachineDidChangeStateEventUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString*' name='TKStateMachineDidChangeStateNewStateUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString*' name='TKStateMachineDidChangeStateNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='TKStateMachineDidChangeStateOldStateUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString*' name='TKStateMachineIsImmutableException' type='@'/>
<constant const='true' declared_type='NSTimeInterval' name='kAFUploadStream3GSuggestedDelay' type='d'/>
<constant const='true' declared_type='NSUInteger' name='kAFUploadStream3GSuggestedPacketSize' type='I' type64='Q'/>
<enum name='AFFormURLParameterEncoding' value='0'/>
<enum name='AFJSONParameterEncoding' value='1'/>
<enum name='AFNetworkReachabilityStatusNotReachable' value='0'/>
<enum name='AFNetworkReachabilityStatusReachableViaWWAN' value='1'/>
<enum name='AFNetworkReachabilityStatusReachableViaWiFi' value='2'/>
<enum name='AFNetworkReachabilityStatusUnknown' value='-1'/>
<enum name='AFPropertyListParameterEncoding' value='2'/>
<enum name='AFSSLPinningModeCertificate' value='2'/>
<enum name='AFSSLPinningModeNone' value='0'/>
<enum name='AFSSLPinningModePublicKey' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_AFNetworking' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_ISO8601DateFormatterValueTransformer' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RKValueTransformers' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_Core' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_CoreData' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_Network' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_ObjectMapping' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_Support' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_SOCKit' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_TransitionKit' value='2'/>
<enum name='COCOAPODS_VERSION_MINOR_AFNetworking' value='3'/>
<enum name='COCOAPODS_VERSION_MINOR_ISO8601DateFormatterValueTransformer' value='6'/>
<enum name='COCOAPODS_VERSION_MINOR_RKValueTransformers' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit' value='24'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_Core' value='24'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_CoreData' value='24'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_Network' value='24'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_ObjectMapping' value='24'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_Support' value='24'/>
<enum name='COCOAPODS_VERSION_MINOR_SOCKit' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_TransitionKit' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_AFNetworking' value='4'/>
<enum name='COCOAPODS_VERSION_PATCH_ISO8601DateFormatterValueTransformer' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RKValueTransformers' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_Core' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_CoreData' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_Network' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_ObjectMapping' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_Support' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_SOCKit' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_TransitionKit' value='0'/>
<enum name='RKAssignmentPolicyReplace' value='1'/>
<enum name='RKAssignmentPolicySet' value='0'/>
<enum name='RKAssignmentPolicyUnion' value='2'/>
<enum name='RKISO8601DateFormatCalendar' value='0'/>
<enum name='RKISO8601DateFormatOrdinal' value='1'/>
<enum name='RKISO8601DateFormatWeek' value='2'/>
<enum name='RKLogComponent' value='0'/>
<enum name='RKLogLevelCritical' value='1'/>
<enum name='RKLogLevelDebug' value='5'/>
<enum name='RKLogLevelDefault' value='3'/>
<enum name='RKLogLevelError' value='2'/>
<enum name='RKLogLevelInfo' value='4'/>
<enum name='RKLogLevelOff' value='0'/>
<enum name='RKLogLevelTrace' value='6'/>
<enum name='RKLogLevelWarning' value='3'/>
<enum name='RKMappingErrorFromMappingResult' value='1004'/>
<enum name='RKMappingErrorInvalidAssignmentPolicy' value='1010'/>
<enum name='RKMappingErrorMappingDeclined' value='1009'/>
<enum name='RKMappingErrorNilDestinationObject' value='1007'/>
<enum name='RKMappingErrorNilManagedObjectCache' value='1008'/>
<enum name='RKMappingErrorNotFound' value='1001'/>
<enum name='RKMappingErrorTypeMismatch' value='1002'/>
<enum name='RKMappingErrorUnableToDetermineMapping' value='1006'/>
<enum name='RKMappingErrorUnmappableRepresentation' value='1003'/>
<enum name='RKMappingErrorValidationFailure' value='1005'/>
<enum name='RKOperationCancelledError' value='2'/>
<enum name='RKReplaceAssignmentPolicy' value='1'/>
<enum name='RKRequestMethodAny' value='127'/>
<enum name='RKRequestMethodDELETE' value='8'/>
<enum name='RKRequestMethodGET' value='1'/>
<enum name='RKRequestMethodHEAD' value='16'/>
<enum name='RKRequestMethodOPTIONS' value='64'/>
<enum name='RKRequestMethodPATCH' value='32'/>
<enum name='RKRequestMethodPOST' value='2'/>
<enum name='RKRequestMethodPUT' value='4'/>
<enum name='RKSetAssignmentPolicy' value='0'/>
<enum name='RKStatusCodeClassClientError' value='400'/>
<enum name='RKStatusCodeClassInformational' value='100'/>
<enum name='RKStatusCodeClassRedirection' value='300'/>
<enum name='RKStatusCodeClassServerError' value='500'/>
<enum name='RKStatusCodeClassSuccessful' value='200'/>
<enum name='RKUnionAssignmentPolicy' value='2'/>
<enum name='RKUnsupportedMIMETypeError' value='1'/>
<enum name='RKValueTransformationErrorTransformationFailed' value='3002'/>
<enum name='RKValueTransformationErrorUnsupportedOutputClass' value='3001'/>
<enum name='RKValueTransformationErrorUntransformableInputValue' value='3000'/>
<enum name='RKlcl_cApp' value='0'/>
<enum name='RKlcl_cRestKit' value='1'/>
<enum name='RKlcl_cRestKitCoreData' value='2'/>
<enum name='RKlcl_cRestKitCoreDataCache' value='3'/>
<enum name='RKlcl_cRestKitNetwork' value='4'/>
<enum name='RKlcl_cRestKitNetworkCoreData' value='5'/>
<enum name='RKlcl_cRestKitObjectMapping' value='6'/>
<enum name='RKlcl_cRestKitSearch' value='7'/>
<enum name='RKlcl_cRestKitSupport' value='8'/>
<enum name='RKlcl_cRestKitTesting' value='9'/>
<enum name='RKlcl_cRestKitUI' value='10'/>
<enum name='RKlcl_vCritical' value='1'/>
<enum name='RKlcl_vDebug' value='5'/>
<enum name='RKlcl_vError' value='2'/>
<enum name='RKlcl_vInfo' value='4'/>
<enum name='RKlcl_vOff' value='0'/>
<enum name='RKlcl_vTrace' value='6'/>
<enum name='RKlcl_vWarning' value='3'/>
<enum name='TKInvalidTransitionError' value='1000'/>
<enum name='TKTransitionDeclinedError' value='1001'/>
<function name='AFContentTypesFromHTTPHeader'>
<arg declared_type='NSString*' name='string' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</function>
<function name='AFQueryStringFromParametersWithEncoding'>
<arg declared_type='NSDictionary*' name='parameters' type='@'/>
<arg declared_type='NSStringEncoding' name='encoding' type='I' type64='Q'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKApplicationDataDirectory'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKArrayOfFetchRequestFromBlocksWithURL'>
<arg declared_type='NSArray*' name='fetchRequestBlocks' type='@'/>
<arg declared_type='NSURL*' name='URL' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</function>
<function name='RKCacheableStatusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</function>
<function name='RKCachesDirectory'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKClassIsCollection'>
<arg declared_type='Class' name='aClass' type='#'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKDateFromHTTPDateString'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</function>
<function name='RKDateFromString'>
<arg declared_type='NSString*' name='dateString' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</function>
<function name='RKDictionaryByMergingDictionaryWithDictionary'>
<arg declared_type='NSDictionary*' name='dict1' type='@'/>
<arg declared_type='NSDictionary*' name='dict2' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKDictionaryByReplacingPercentEscapesInEntriesFromDictionary'>
<arg declared_type='NSDictionary*' name='dictionary' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKDictionaryFromURLEncodedStringWithEncoding'>
<arg declared_type='NSString*' name='URLEncodedString' type='@'/>
<arg declared_type='NSStringEncoding' name='encoding' type='I' type64='Q'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKEnsureDirectoryExistsAtPath'>
<arg declared_type='NSString*' name='path' type='@'/>
<arg declared_type='NSError**' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKErrorFromMappingResult'>
<arg declared_type='RKMappingResult*' name='mappingResult' type='@'/>
<retval declared_type='NSError*' type='@'/>
</function>
<function name='RKGetLoggingClass'>
<retval declared_type='Class*' type='#'/>
</function>
<function name='RKHTTPCacheExpirationDateFromHeadersWithStatusCode'>
<arg declared_type='NSDictionary*' name='headers' type='@'/>
<arg declared_type='NSInteger' name='statusCode' type='i' type64='q'/>
<retval declared_type='NSDate*' type='@'/>
</function>
<function name='RKIdentificationAttributesInferredFromEntity'>
<arg declared_type='NSEntityDescription*' name='entity' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</function>
<function name='RKIsSpecificRequestMethod'>
<arg declared_type='RKRequestMethod' name='method' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKKeyValueCodingClassForObjCType'>
<arg const='true' declared_type='char*' name='type' type='*'/>
<retval declared_type='Class' type='#'/>
</function>
<function name='RKKeyValueCodingClassFromPropertyAttributes'>
<arg const='true' declared_type='char*' name='attr' type='*'/>
<retval declared_type='Class' type='#'/>
</function>
<function name='RKLogConfigureFromEnvironment'>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogCoreDataError'>
<arg declared_type='NSError*' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogIntegerAsBinary'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogValidationError'>
<arg declared_type='NSError*' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKMIMETypeFromPathExtension'>
<arg declared_type='NSString*' name='path' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKMIMETypeInSet'>
<arg declared_type='NSString*' name='MIMEType' type='@'/>
<arg declared_type='NSSet*' name='MIMETypes' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsCollection'>
<arg declared_type='id' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsCollectionContainingOnlyManagedObjects'>
<arg declared_type='id' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsCollectionOfCollections'>
<arg declared_type='id' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsEqualToObject'>
<arg declared_type='id' name='object' type='@'/>
<arg declared_type='id' name='anotherObject' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKPathAndQueryStringFromURLRelativeToURL'>
<arg declared_type='NSURL*' name='URL' type='@'/>
<arg declared_type='NSURL*' name='baseURL' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKPathFromPatternWithObject'>
<arg declared_type='NSString*' name='pathPattern' type='@'/>
<arg declared_type='id' name='object' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKPercentEscapedQueryStringFromStringWithEncoding'>
<arg declared_type='NSString*' name='string' type='@'/>
<arg declared_type='NSStringEncoding' name='encoding' type='I' type64='Q'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKPropertyInspectorGetClassForPropertyAtKeyPathOfObject'>
<arg declared_type='NSString*' name='keyPath' type='@'/>
<arg declared_type='id' name='object' type='@'/>
<retval declared_type='Class' type='#'/>
</function>
<function name='RKPropertyInspectorIsPropertyAtKeyPathOfObjectPrimitive'>
<arg declared_type='NSString*' name='keyPath' type='@'/>
<arg declared_type='id' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKPropertyTypeFromAttributeString'>
<arg declared_type='NSString*' name='attributeString' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKQueryParametersFromStringWithEncoding'>
<arg declared_type='NSString*' name='string' type='@'/>
<arg declared_type='NSStringEncoding' name='encoding' type='I' type64='Q'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKRequestMethodFromString'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='RKRequestMethod' type='i' type64='q'/>
</function>
<function name='RKSetExcludeFromBackupAttributeForItemAtPath'>
<arg declared_type='NSString*' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKSetLoggingClass'>
<arg declared_type='Class*' name='loggingClass' type='#'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKStatusCodeIndexSetForClass'>
<arg declared_type='RKStatusCodeClass' name='statusCodeClass' type='I' type64='Q'/>
<retval declared_type='NSIndexSet*' type='@'/>
</function>
<function name='RKStatusCodeRangeForClass'>
<arg declared_type='RKStatusCodeClass' name='statusCodeClass' type='I' type64='Q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</function>
<function name='RKStatusCodesOfResponsesWithOptionalBodies'>
<retval declared_type='NSIndexSet*' type='@'/>
</function>
<function name='RKStringFromDate'>
<arg declared_type='NSDate*' name='date' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKStringFromNetworkReachabilityStatus'>
<arg declared_type='AFNetworkReachabilityStatus' name='networkReachabilityStatus' type='i'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKStringFromRequestMethod'>
<arg declared_type='RKRequestMethod' name='method' type='i' type64='q'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKStringFromStatusCode'>
<arg declared_type='NSInteger' name='statusCode' type='i' type64='q'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKURLEncodedStringFromDictionaryWithEncoding'>
<arg declared_type='NSDictionary*' name='dictionary' type='@'/>
<arg declared_type='NSStringEncoding' name='encoding' type='I' type64='Q'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKURLIsRelativeToURL'>
<arg declared_type='NSURL*' name='URL' type='@'/>
<arg declared_type='NSURL*' name='baseURL' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKlcl_configure_by_component'>
<arg declared_type='_RKlcl_component_t' name='component' type='I'/>
<arg declared_type='_RKlcl_level_t' name='level' type='I'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='RKlcl_configure_by_header'>
<arg const='true' declared_type='char*' name='header' type='*'/>
<arg declared_type='_RKlcl_level_t' name='level' type='I'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='RKlcl_configure_by_identifier'>
<arg const='true' declared_type='char*' name='identifier' type='*'/>
<arg declared_type='_RKlcl_level_t' name='level' type='I'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='RKlcl_configure_by_name'>
<arg const='true' declared_type='char*' name='name' type='*'/>
<arg declared_type='_RKlcl_level_t' name='level' type='I'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='SOCStringFromStringWithObject'>
<arg declared_type='NSString*' name='string' type='@'/>
<arg declared_type='id' name='object' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<class name='AFHTTPClient'>
<method selector='HTTPRequestOperationWithRequest:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='urlRequest' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='1' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='2' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='allowsInvalidSSLCertificate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='cancelAllHTTPOperationsWithMethod:path:'>
<arg declared_type='NSString*' index='0' name='method' type='@'/>
<arg declared_type='NSString*' index='1' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearAuthorizationHeader'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='clientWithBaseURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='defaultHeaders'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='defaultSSLPinningMode'>
<retval declared_type='AFURLConnectionOperationSSLPinningMode' type='i'/>
</method>
<method selector='defaultValueForHeader:'>
<arg declared_type='NSString*' index='0' name='header' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='deletePath:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperations:progressBlock:completionBlock:'>
<arg declared_type='NSArray*' index='0' name='operations' type='@'/>
<arg declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true' index='1' name='progressBlock' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSArray *)' function_pointer='true' index='2' name='completionBlock' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperationsWithRequests:progressBlock:completionBlock:'>
<arg declared_type='NSArray*' index='0' name='urlRequests' type='@'/>
<arg declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true' index='1' name='progressBlock' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSArray *)' function_pointer='true' index='2' name='completionBlock' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueHTTPRequestOperation:'>
<arg declared_type='AFHTTPRequestOperation*' index='0' name='operation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getPath:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBaseURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='multipartFormRequestWithMethod:path:parameters:constructingBodyWithBlock:'>
<arg declared_type='NSString*' index='0' name='method' type='@'/>
<arg declared_type='NSString*' index='1' name='path' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='parameters' type='@'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='3' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='networkReachabilityStatus'>
<retval declared_type='AFNetworkReachabilityStatus' type='i'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='parameterEncoding'>
<retval declared_type='AFHTTPClientParameterEncoding' type='i'/>
</method>
<method selector='patchPath:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='postPath:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='putPath:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerHTTPOperationClass:'>
<arg declared_type='Class' index='0' name='operationClass' type='#'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requestWithMethod:path:parameters:'>
<arg declared_type='NSString*' index='0' name='method' type='@'/>
<arg declared_type='NSString*' index='1' name='path' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='parameters' type='@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg declared_type='BOOL' index='0' name='allowsInvalidSSLCertificate' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderWithToken:'>
<arg declared_type='NSString*' index='0' name='token' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderWithUsername:password:'>
<arg declared_type='NSString*' index='0' name='username' type='@'/>
<arg declared_type='NSString*' index='1' name='password' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultCredential:'>
<arg declared_type='NSURLCredential*' index='0' name='credential' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultHeader:value:'>
<arg declared_type='NSString*' index='0' name='header' type='@'/>
<arg declared_type='NSString*' index='1' name='value' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultSSLPinningMode:'>
<arg declared_type='AFURLConnectionOperationSSLPinningMode' index='0' name='defaultSSLPinningMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParameterEncoding:'>
<arg declared_type='AFHTTPClientParameterEncoding' index='0' name='parameterEncoding' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReachabilityStatusChangeBlock:'>
<arg declared_type='void (^)(AFNetworkReachabilityStatus)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='AFNetworkReachabilityStatus' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringEncoding:'>
<arg declared_type='NSStringEncoding' index='0' name='stringEncoding' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
<method selector='unregisterHTTPOperationClass:'>
<arg declared_type='Class' index='0' name='operationClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFHTTPRequestOperation'>
<method class_method='true' selector='acceptableContentTypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method class_method='true' selector='acceptableStatusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method class_method='true' selector='addAcceptableContentTypes:'>
<arg declared_type='NSSet*' index='0' name='contentTypes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='addAcceptableStatusCodes:'>
<arg declared_type='NSIndexSet*' index='0' name='statusCodes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='canProcessRequest:'>
<arg declared_type='NSURLRequest*' index='0' name='urlRequest' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='failureCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='hasAcceptableContentType'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasAcceptableStatusCode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='response'>
<retval declared_type='NSHTTPURLResponse*' type='@'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='0' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='1' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg declared_type='dispatch_queue_t' index='0' name='failureCallbackQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg declared_type='dispatch_queue_t' index='0' name='successCallbackQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='successCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
</class>
<class name='AFImageRequestOperation'>
<method selector='automaticallyInflatesResponseImage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='imageRequestOperationWithRequest:imageProcessingBlock:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='urlRequest' type='@'/>
<arg declared_type='UIImage *(^)(UIImage *)' function_pointer='true' index='1' name='imageProcessingBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</arg>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='imageRequestOperationWithRequest:success:'>
<arg declared_type='NSURLRequest*' index='0' name='urlRequest' type='@'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='1' name='success' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageScale'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='responseImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='setAutomaticallyInflatesResponseImage:'>
<arg declared_type='BOOL' index='0' name='automaticallyInflatesResponseImage' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageScale:'>
<arg declared_type='CGFloat' index='0' name='imageScale' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFJSONRequestOperation'>
<method selector='JSONReadingOptions'>
<retval declared_type='NSJSONReadingOptions' type='I' type64='Q'/>
</method>
<method class_method='true' selector='JSONRequestOperationWithRequest:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='urlRequest' type='@'/>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)' function_pointer='true' index='1' name='success' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)' function_pointer='true' index='2' name='failure' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseJSON'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setJSONReadingOptions:'>
<arg declared_type='NSJSONReadingOptions' index='0' name='JSONReadingOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFNetworkActivityIndicatorManager'>
<method selector='decrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='incrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNetworkActivityIndicatorVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='AFPropertyListRequestOperation'>
<method selector='propertyListReadOptions'>
<retval declared_type='NSPropertyListReadOptions' type='I' type64='Q'/>
</method>
<method class_method='true' selector='propertyListRequestOperationWithRequest:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='urlRequest' type='@'/>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)' function_pointer='true' index='1' name='success' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)' function_pointer='true' index='2' name='failure' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responsePropertyList'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPropertyListReadOptions:'>
<arg declared_type='NSPropertyListReadOptions' index='0' name='propertyListReadOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFURLConnectionOperation'>
<method selector='SSLPinningMode'>
<retval declared_type='AFURLConnectionOperationSSLPinningMode' type='i'/>
</method>
<method selector='allowsInvalidSSLCertificate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='credential'>
<retval declared_type='NSURLCredential*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithRequest:'>
<arg declared_type='NSURLRequest*' index='0' name='urlRequest' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inputStream'>
<retval declared_type='NSInputStream*' type='@'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outputStream'>
<retval declared_type='NSOutputStream*' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSURLResponse*' type='@'/>
</method>
<method selector='responseData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='responseString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='responseStringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
<method selector='resume'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runLoopModes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg declared_type='BOOL' index='0' name='allowsInvalidSSLCertificate' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheResponseBlock:'>
<arg declared_type='NSCachedURLResponse *(^)(NSURLConnection *, NSCachedURLResponse *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSCachedURLResponse*' type='@'/>
<retval declared_type='NSCachedURLResponse*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCredential:'>
<arg declared_type='NSURLCredential*' index='0' name='credential' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadProgressBlock:'>
<arg declared_type='void (^)(NSUInteger, long long, long long)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputStream:'>
<arg declared_type='NSInputStream*' index='0' name='inputStream' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputStream:'>
<arg declared_type='NSOutputStream*' index='0' name='outputStream' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRedirectResponseBlock:'>
<arg declared_type='NSURLRequest *(^)(NSURLConnection *, NSURLRequest *, NSURLResponse *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRunLoopModes:'>
<arg declared_type='NSSet*' index='0' name='runLoopModes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSSLPinningMode:'>
<arg declared_type='AFURLConnectionOperationSSLPinningMode' index='0' name='SSLPinningMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldExecuteAsBackgroundTaskWithExpirationHandler:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='handler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldUseCredentialStorage:'>
<arg declared_type='BOOL' index='0' name='shouldUseCredentialStorage' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploadProgressBlock:'>
<arg declared_type='void (^)(NSUInteger, long long, long long)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='NSDictionary*' index='0' name='userInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillSendRequestForAuthenticationChallengeBlock:'>
<arg declared_type='void (^)(NSURLConnection *, NSURLAuthenticationChallenge *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLAuthenticationChallenge*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldUseCredentialStorage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='AFXMLRequestOperation'>
<method class_method='true' selector='XMLParserRequestOperationWithRequest:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='urlRequest' type='@'/>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSXMLParser *)' function_pointer='true' index='1' name='success' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSXMLParser*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, NSXMLParser *)' function_pointer='true' index='2' name='failure' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='NSXMLParser*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseXMLParser'>
<retval declared_type='NSXMLParser*' type='@'/>
</method>
</class>
<class name='NSManagedObject'>
<method selector='hasBeenDeleted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNew'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSManagedObjectContext'>
<method selector='countForEntityForName:predicate:error:'>
<arg declared_type='NSString*' index='0' name='entityName' type='@'/>
<arg declared_type='NSPredicate*' index='1' name='predicate' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='insertNewObjectForEntityForName:'>
<arg declared_type='NSString*' index='0' name='entityName' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='saveToPersistentStore:'>
<arg declared_type='NSError**' index='0' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSObject'>
<method selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='NSString*' index='3' name='mimeType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileURL:name:error:'>
<arg declared_type='NSURL*' index='0' name='fileURL' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:'>
<arg declared_type='NSURL*' index='0' name='fileURL' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='NSString*' index='3' name='mimeType' type='@'/>
<arg declared_type='NSError**' index='4' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFormData:name:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithHeaders:body:'>
<arg declared_type='NSDictionary*' index='0' name='headers' type='@'/>
<arg declared_type='NSData*' index='1' name='body' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithInputStream:name:fileName:length:mimeType:'>
<arg declared_type='NSInputStream*' index='0' name='inputStream' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='unsigned long long' index='3' name='length' type='Q'/>
<arg declared_type='NSString*' index='4' name='mimeType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='commitChangesForMappingOperation:error:'>
<arg declared_type='RKMappingOperation*' index='0' name='mappingOperation' type='@'/>
<arg declared_type='NSError**' index='1' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='dataFromObject:error:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSError**' index='1' name='error' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='didCreateObject:'>
<arg declared_type='NSManagedObject*' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didDeleteObject:'>
<arg declared_type='NSManagedObject*' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didFetchObject:'>
<arg declared_type='NSManagedObject*' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='logWithComponent:level:path:line:function:format:' variadic='true'>
<arg declared_type='_RKlcl_component_t' index='0' name='component' type='I'/>
<arg declared_type='_RKlcl_level_t' index='1' name='level' type='I'/>
<arg const='true' declared_type='char*' index='2' name='file' type='*'/>
<arg declared_type='uint32_t' index='3' name='line' type='I'/>
<arg const='true' declared_type='char*' index='4' name='function' type='*'/>
<arg declared_type='NSString*' index='5' name='format' printf_format='true' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectsWithEntity:attributeValues:inManagedObjectContext:'>
<arg declared_type='NSEntityDescription*' index='0' name='entity' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='attributeValues' type='@'/>
<arg declared_type='NSManagedObjectContext*' index='2' name='managedObjectContext' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='mapper:didFailMappingOperation:forKeyPath:withError:'>
<arg declared_type='RKMapperOperation*' index='0' name='mapper' type='@'/>
<arg declared_type='RKMappingOperation*' index='1' name='mappingOperation' type='@'/>
<arg declared_type='NSString*' index='2' name='keyPath' type='@'/>
<arg declared_type='NSError*' index='3' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didFindRepresentationOrArrayOfRepresentations:atKeyPath:'>
<arg declared_type='RKMapperOperation*' index='0' name='mapper' type='@'/>
<arg declared_type='id' index='1' name='dictionaryOrArrayOfDictionaries' type='@'/>
<arg declared_type='NSString*' index='2' name='keyPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didFinishMappingOperation:forKeyPath:'>
<arg declared_type='RKMapperOperation*' index='0' name='mapper' type='@'/>
<arg declared_type='RKMappingOperation*' index='1' name='mappingOperation' type='@'/>
<arg declared_type='NSString*' index='2' name='keyPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didNotFindRepresentationOrArrayOfRepresentationsAtKeyPath:'>
<arg declared_type='RKMapperOperation*' index='0' name='mapper' type='@'/>
<arg declared_type='NSString*' index='1' name='keyPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:willStartMappingOperation:forKeyPath:'>
<arg declared_type='RKMapperOperation*' index='0' name='mapper' type='@'/>
<arg declared_type='RKMappingOperation*' index='1' name='mappingOperation' type='@'/>
<arg declared_type='NSString*' index='2' name='keyPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperDidCancelMapping:'>
<arg declared_type='RKMapperOperation*' index='0' name='mapper' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperDidFinishMapping:'>
<arg declared_type='RKMapperOperation*' index='0' name='mapper' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperWillStartMapping:'>
<arg declared_type='RKMapperOperation*' index='0' name='mapper' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:deleteExistingValueOfRelationshipWithMapping:error:'>
<arg declared_type='RKMappingOperation*' index='0' name='mappingOperation' type='@'/>
<arg declared_type='RKRelationshipMapping*' index='1' name='relationshipMapping' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingOperation:didConnectRelationship:toValue:usingConnection:'>
<arg declared_type='RKMappingOperation*' index='0' name='operation' type='@'/>
<arg declared_type='NSRelationshipDescription*' index='1' name='relationship' type='@'/>
<arg declared_type='id' index='2' name='value' type='@'/>
<arg declared_type='RKConnectionDescription*' index='3' name='connection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFailToConnectRelationship:usingConnection:'>
<arg declared_type='RKMappingOperation*' index='0' name='operation' type='@'/>
<arg declared_type='NSRelationshipDescription*' index='1' name='relationship' type='@'/>
<arg declared_type='RKConnectionDescription*' index='2' name='connection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFailWithError:'>
<arg declared_type='RKMappingOperation*' index='0' name='operation' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFindValue:forKeyPath:mapping:'>
<arg declared_type='RKMappingOperation*' index='0' name='operation' type='@'/>
<arg declared_type='id' index='1' name='value' type='@'/>
<arg declared_type='NSString*' index='2' name='keyPath' type='@'/>
<arg declared_type='RKPropertyMapping*' index='3' name='propertyMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didNotFindValueForKeyPath:mapping:'>
<arg declared_type='RKMappingOperation*' index='0' name='operation' type='@'/>
<arg declared_type='NSString*' index='1' name='keyPath' type='@'/>
<arg declared_type='RKPropertyMapping*' index='2' name='propertyMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didNotSetUnchangedValue:forKeyPath:usingMapping:'>
<arg declared_type='RKMappingOperation*' index='0' name='operation' type='@'/>
<arg declared_type='id' index='1' name='value' type='@'/>
<arg declared_type='NSString*' index='2' name='keyPath' type='@'/>
<arg declared_type='RKPropertyMapping*' index='3' name='propertyMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didSelectObjectMapping:forDynamicMapping:'>
<arg declared_type='RKMappingOperation*' index='0' name='operation' type='@'/>
<arg declared_type='RKObjectMapping*' index='1' name='objectMapping' type='@'/>
<arg declared_type='RKDynamicMapping*' index='2' name='dynamicMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didSetValue:forKeyPath:usingMapping:'>
<arg declared_type='RKMappingOperation*' index='0' name='operation' type='@'/>
<arg declared_type='id' index='1' name='value' type='@'/>
<arg declared_type='NSString*' index='2' name='keyPath' type='@'/>
<arg declared_type='RKPropertyMapping*' index='3' name='propertyMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:shouldSetValue:forKeyPath:usingMapping:'>
<arg declared_type='RKMappingOperation*' index='0' name='operation' type='@'/>
<arg declared_type='id' index='1' name='value' type='@'/>
<arg declared_type='NSString*' index='2' name='keyPath' type='@'/>
<arg declared_type='RKPropertyMapping*' index='3' name='propertyMapping' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingOperation:targetObjectForMapping:inRelationship:'>
<arg declared_type='RKMappingOperation*' index='0' name='mappingOperation' type='@'/>
<arg declared_type='RKObjectMapping*' index='1' name='mapping' type='@'/>
<arg declared_type='RKRelationshipMapping*' index='2' name='relationshipMapping' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingOperation:targetObjectForRepresentation:withMapping:inRelationship:'>
<arg declared_type='RKMappingOperation*' index='0' name='mappingOperation' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='representation' type='@'/>
<arg declared_type='RKObjectMapping*' index='2' name='mapping' type='@'/>
<arg declared_type='RKRelationshipMapping*' index='3' name='relationshipMapping' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingOperationShouldCollectMappingInfo:'>
<arg declared_type='RKMappingOperation*' index='0' name='mappingOperation' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingOperationShouldSetUnchangedValues:'>
<arg declared_type='RKMappingOperation*' index='0' name='mappingOperation' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingOperationShouldSkipPropertyMapping:'>
<arg declared_type='RKMappingOperation*' index='0' name='mappingOperation' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='objectFromData:error:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSError**' index='1' name='error' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:'>
<arg declared_type='NSUInteger' index='0' name='numberOfBytes' type='I' type64='Q'/>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transformValue:toValue:ofClass:error:'>
<arg declared_type='id' index='0' name='inputValue' type='@'/>
<arg declared_type='id*' index='1' name='outputValue' type='^@'/>
<arg declared_type='Class' index='2' name='outputValueClass' type='#'/>
<arg declared_type='NSError**' index='3' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='validateTransformationFromClass:toClass:'>
<arg declared_type='Class' index='0' name='inputValueClass' type='#'/>
<arg declared_type='Class' index='1' name='outputValueClass' type='#'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKAttributeMapping'>
<method class_method='true' selector='attributeMappingFromKeyPath:toKeyPath:'>
<arg declared_type='NSString*' index='0' name='sourceKeyPath' type='@'/>
<arg declared_type='NSString*' index='1' name='destinationKeyPath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKBlockValueTransformer'>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='valueTransformerWithValidationBlock:transformationBlock:'>
<arg declared_type='BOOL (^)(Class, Class)' function_pointer='true' index='0' name='validationBlock' type='@?'>
<arg declared_type='Class' type='#'/>
<arg declared_type='Class' type='#'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<arg declared_type='BOOL (^)(id, id *, Class, NSError **)' function_pointer='true' index='1' name='transformationBlock' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id*' type='^@'/>
<arg declared_type='Class' type='#'/>
<arg declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKCompoundValueTransformer'>
<method selector='addValueTransformer:'>
<arg declared_type='id' index='0' name='valueTransformer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='compoundValueTransformerWithValueTransformers:'>
<arg declared_type='NSArray*' index='0' name='valueTransformers' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertValueTransformer:atIndex:'>
<arg declared_type='id' index='0' name='valueTransformer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfValueTransformers'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='removeValueTransformer:'>
<arg declared_type='id' index='0' name='valueTransformer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueTransformersForTransformingFromClass:toClass:'>
<arg declared_type='Class' index='0' name='inputValueClass' type='#'/>
<arg declared_type='Class' index='1' name='outputValueClass' type='#'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='RKConnectionDescription'>
<method selector='attributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='destinationPredicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='includesSubentities'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithRelationship:attributes:'>
<arg declared_type='NSRelationshipDescription*' index='0' name='relationship' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='sourceToDestinationEntityAttributes' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRelationship:keyPath:'>
<arg declared_type='NSRelationshipDescription*' index='0' name='relationship' type='@'/>
<arg declared_type='NSString*' index='1' name='keyPath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isForeignKeyConnection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isKeyPathConnection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='relationship'>
<retval declared_type='NSRelationshipDescription*' type='@'/>
</method>
<method selector='setDestinationPredicate:'>
<arg declared_type='NSPredicate*' index='0' name='destinationPredicate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludesSubentities:'>
<arg declared_type='BOOL' index='0' name='includesSubentities' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRelationship:'>
<arg declared_type='NSRelationshipDescription*' index='0' name='relationship' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourcePredicate:'>
<arg declared_type='NSPredicate*' index='0' name='sourcePredicate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourcePredicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
</class>
<class name='RKDotNetDateFormatter'>
<method selector='dateFromString:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method class_method='true' selector='dotNetDateFormatterWithTimeZone:'>
<arg declared_type='NSTimeZone*' index='0' name='timeZone' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='stringFromDate:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RKDynamicMapping'>
<method selector='addMatcher:'>
<arg declared_type='RKObjectMappingMatcher*' index='0' name='matcher' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='matchers'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectMappingForRepresentation:'>
<arg declared_type='id' index='0' name='representation' type='@'/>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='objectMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeMatcher:'>
<arg declared_type='RKObjectMappingMatcher*' index='0' name='matcher' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatchers:'>
<arg declared_type='NSArray*' index='0' name='matchers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMappingForRepresentationBlock:'>
<arg declared_type='RKObjectMapping *(^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='RKObjectMapping*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKEntityByAttributeCache'>
<method selector='addObject:'>
<arg declared_type='NSManagedObject*' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObjects:completion:'>
<arg declared_type='NSSet*' index='0' name='managedObjects' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='callbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='containsObject:'>
<arg declared_type='NSManagedObject*' index='0' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='containsObjectWithAttributeValues:'>
<arg declared_type='NSDictionary*' index='0' name='attributeValues' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='countOfAttributeValues'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='countWithAttributeValues:'>
<arg declared_type='NSDictionary*' index='0' name='attributeValues' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='entity'>
<retval declared_type='NSEntityDescription*' type='@'/>
</method>
<method selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method selector='flush:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithEntity:attributes:managedObjectContext:'>
<arg declared_type='NSEntityDescription*' index='0' name='entity' type='@'/>
<arg declared_type='NSArray*' index='1' name='attributeNames' type='@'/>
<arg declared_type='NSManagedObjectContext*' index='2' name='context' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='load'>
<retval declared_type='void' type='v'/>
</method>
<method selector='load:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='monitorsContextForChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectWithAttributeValues:inContext:'>
<arg declared_type='NSDictionary*' index='0' name='attributeValues' type='@'/>
<arg declared_type='NSManagedObjectContext*' index='1' name='context' type='@'/>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='objectsWithAttributeValues:inContext:'>
<arg declared_type='NSDictionary*' index='0' name='attributeValues' type='@'/>
<arg declared_type='NSManagedObjectContext*' index='1' name='context' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='removeObject:'>
<arg declared_type='NSManagedObject*' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjects:completion:'>
<arg declared_type='NSSet*' index='0' name='managedObjects' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCallbackQueue:'>
<arg declared_type='dispatch_queue_t' index='0' name='callbackQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMonitorsContextForChanges:'>
<arg declared_type='BOOL' index='0' name='monitorsContextForChanges' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKEntityCache'>
<method selector='addObject:'>
<arg declared_type='NSManagedObject*' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObjects:completion:'>
<arg declared_type='NSSet*' index='0' name='objects' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributeCacheForEntity:attributes:'>
<arg declared_type='NSEntityDescription*' index='0' name='entity' type='@'/>
<arg declared_type='NSArray*' index='1' name='attributeNames' type='@'/>
<retval declared_type='RKEntityByAttributeCache*' type='@'/>
</method>
<method selector='attributeCachesForEntity:'>
<arg declared_type='NSEntityDescription*' index='0' name='entity' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='cacheObjectsForEntity:byAttributes:completion:'>
<arg declared_type='NSEntityDescription*' index='0' name='entity' type='@'/>
<arg declared_type='NSArray*' index='1' name='attributeNames' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='2' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='callbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='containsObject:'>
<arg declared_type='NSManagedObject*' index='0' name='managedObject' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='flush:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' name='context' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEntity:cachedByAttributes:'>
<arg declared_type='NSEntityDescription*' index='0' name='entity' type='@'/>
<arg declared_type='NSArray*' index='1' name='attributeNames' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='objectForEntity:withAttributeValues:inContext:'>
<arg declared_type='NSEntityDescription*' index='0' name='entity' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='attributeValues' type='@'/>
<arg declared_type='NSManagedObjectContext*' index='2' name='context' type='@'/>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='objectsForEntity:withAttributeValues:inContext:'>
<arg declared_type='NSEntityDescription*' index='0' name='entity' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='attributeValues' type='@'/>
<arg declared_type='NSManagedObjectContext*' index='2' name='context' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='removeObject:'>
<arg declared_type='NSManagedObject*' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjects:completion:'>
<arg declared_type='NSSet*' index='0' name='objects' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCallbackQueue:'>
<arg declared_type='dispatch_queue_t' index='0' name='callbackQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' name='managedObjectContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKEntityMapping'>
<method selector='addConnection:'>
<arg declared_type='RKConnectionDescription*' index='0' name='connection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addConnectionForRelationship:connectedBy:'>
<arg declared_type='id' index='0' name='relationshipOrName' type='@'/>
<arg declared_type='id' index='1' name='connectionSpecifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connectionForRelationship:'>
<arg declared_type='id' index='0' name='relationshipOrName' type='@'/>
<retval declared_type='RKConnectionDescription*' type='@'/>
</method>
<method selector='connections'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='defaultValueForAttribute:'>
<arg declared_type='NSString*' index='0' name='attributeName' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='deletionPredicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='discardsInvalidObjectsOnInsert'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='entity'>
<retval declared_type='NSEntityDescription*' type='@'/>
</method>
<method selector='identificationAttributes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='identificationPredicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='initWithEntity:'>
<arg declared_type='NSEntityDescription*' index='0' name='entity' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='isEntityIdentificationInferenceEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='mappingForEntityForName:inManagedObjectStore:'>
<arg declared_type='NSString*' index='0' name='entityName' type='@'/>
<arg declared_type='RKManagedObjectStore*' index='1' name='managedObjectStore' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='modificationAttribute'>
<retval declared_type='NSAttributeDescription*' type='@'/>
</method>
<method selector='modificationKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='persistentStore'>
<retval declared_type='NSPersistentStore*' type='@'/>
</method>
<method selector='removeConnection:'>
<arg declared_type='RKConnectionDescription*' index='0' name='connection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeletionPredicate:'>
<arg declared_type='NSPredicate*' index='0' name='deletionPredicate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDiscardsInvalidObjectsOnInsert:'>
<arg declared_type='BOOL' index='0' name='discardsInvalidObjectsOnInsert' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEntity:'>
<arg declared_type='NSEntityDescription*' index='0' name='entity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setEntityIdentificationInferenceEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentificationAttributes:'>
<arg declared_type='NSArray*' index='0' name='identificationAttributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentificationPredicate:'>
<arg declared_type='NSPredicate*' index='0' name='identificationPredicate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModificationAttribute:'>
<arg declared_type='NSAttributeDescription*' index='0' name='modificationAttribute' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModificationAttributeForName:'>
<arg declared_type='NSString*' index='0' name='attributeName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModificationKey:'>
<arg declared_type='NSString*' index='0' name='modificationKey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStore:'>
<arg declared_type='NSPersistentStore*' index='0' name='persistentStore' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKErrorMessage'>
<method selector='errorMessage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setErrorMessage:'>
<arg declared_type='NSString*' index='0' name='errorMessage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='NSDictionary*' index='0' name='userInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='RKHTTPRequestOperation'>
<method selector='acceptableContentTypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='acceptableStatusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method selector='setAcceptableContentTypes:'>
<arg declared_type='NSSet*' index='0' name='acceptableContentTypes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAcceptableStatusCodes:'>
<arg declared_type='NSIndexSet*' index='0' name='acceptableStatusCodes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKISO8601DateFormatter'>
<method selector='dateComponentsFromString:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='NSDateComponents*' type='@'/>
</method>
<method selector='dateFromString:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method class_method='true' selector='defaultISO8601DateFormatter'>
<retval declared_type='id' type='@'/>
</method>
<method selector='format'>
<retval declared_type='RKISO8601DateFormat' type='I' type64='Q'/>
</method>
<method selector='includeTime'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='locale'>
<retval declared_type='NSLocale*' type='@'/>
</method>
<method selector='parsesStrictly'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setFormat:'>
<arg declared_type='RKISO8601DateFormat' index='0' name='format' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeTime:'>
<arg declared_type='BOOL' index='0' name='includeTime' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocale:'>
<arg declared_type='NSLocale*' index='0' name='locale' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParsesStrictly:'>
<arg declared_type='BOOL' index='0' name='parsesStrictly' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeSeparator:'>
<arg declared_type='unichar' index='0' name='timeSeparator' type='S'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeZone:'>
<arg declared_type='NSTimeZone*' index='0' name='timeZone' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringFromDate:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='timeSeparator'>
<retval declared_type='unichar' type='S'/>
</method>
<method selector='timeZone'>
<retval declared_type='NSTimeZone*' type='@'/>
</method>
</class>
<class name='RKInMemoryManagedObjectCache'>
<method selector='initWithManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' name='managedObjectContext' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKMIMETypeSerialization'>
<method class_method='true' selector='dataFromObject:MIMEType:error:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSString*' index='1' name='MIMEType' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method class_method='true' selector='objectFromData:MIMEType:error:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='MIMEType' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='registerClass:forMIMEType:'>
<arg declared_type='Class*' index='0' name='serializationClass' type='#'/>
<arg declared_type='id' index='1' name='MIMETypeStringOrRegularExpression' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='registeredMIMETypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method class_method='true' selector='serializationClassForMIMEType:'>
<arg declared_type='NSString*' index='0' name='MIMEType' type='@'/>
<retval declared_type='Class*' type='#'/>
</method>
<method class_method='true' selector='unregisterClass:'>
<arg declared_type='Class*' index='0' name='serializationClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectImporter'>
<method selector='finishImporting:'>
<arg declared_type='NSError**' index='0' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='importObjectsFromItemAtPath:withMapping:keyPath:error:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='RKMapping*' index='1' name='mapping' type='@'/>
<arg declared_type='NSString*' index='2' name='keyPath' type='@'/>
<arg declared_type='NSError**' index='3' name='error' type='^@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='initWithManagedObjectModel:storePath:'>
<arg declared_type='NSManagedObjectModel*' index='0' name='managedObjectModel' type='@'/>
<arg declared_type='NSString*' index='1' name='storePath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPersistentStore:'>
<arg declared_type='NSPersistentStore*' index='0' name='persistentStore' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='logSeedingInfo'>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='managedObjectModel'>
<retval declared_type='NSManagedObjectModel*' type='@'/>
</method>
<method selector='persistentStore'>
<retval declared_type='NSPersistentStore*' type='@'/>
</method>
<method selector='resetsStoreBeforeImporting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setManagedObjectCache:'>
<arg declared_type='id' index='0' name='managedObjectCache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' name='managedObjectContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectModel:'>
<arg declared_type='NSManagedObjectModel*' index='0' name='managedObjectModel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStore:'>
<arg declared_type='NSPersistentStore*' index='0' name='persistentStore' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResetsStoreBeforeImporting:'>
<arg declared_type='BOOL' index='0' name='resetsStoreBeforeImporting' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStorePath:'>
<arg declared_type='NSString*' index='0' name='storePath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='storePath'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RKManagedObjectMappingOperationDataSource'>
<method selector='initWithManagedObjectContext:cache:'>
<arg declared_type='NSManagedObjectContext*' index='0' name='managedObjectContext' type='@'/>
<arg declared_type='id' index='1' name='managedObjectCache' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='parentOperation'>
<retval declared_type='NSOperation*' type='@'/>
</method>
<method selector='setManagedObjectCache:'>
<arg declared_type='id' index='0' name='managedObjectCache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' name='managedObjectContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOperationQueue:'>
<arg declared_type='NSOperationQueue*' index='0' name='operationQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParentOperation:'>
<arg declared_type='NSOperation*' index='0' name='parentOperation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectRequestOperation'>
<method selector='deletesOrphanedObjects'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fetchRequestBlocks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='savesToPersistentStore'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDeletesOrphanedObjects:'>
<arg declared_type='BOOL' index='0' name='deletesOrphanedObjects' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFetchRequestBlocks:'>
<arg declared_type='NSArray*' index='0' name='fetchRequestBlocks' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg declared_type='id' index='0' name='managedObjectCache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' name='managedObjectContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSavesToPersistentStore:'>
<arg declared_type='BOOL' index='0' name='savesToPersistentStore' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillSaveMappingContextBlock:'>
<arg declared_type='void (^)(NSManagedObjectContext *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectResponseMapperOperation'>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='setManagedObjectCache:'>
<arg declared_type='id' index='0' name='managedObjectCache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' name='managedObjectContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObjectID:'>
<arg declared_type='NSManagedObjectID*' index='0' name='targetObjectID' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetObjectID'>
<retval declared_type='NSManagedObjectID*' type='@'/>
</method>
</class>
<class name='RKManagedObjectStore'>
<method selector='addInMemoryPersistentStore:'>
<arg declared_type='NSError**' index='0' name='error' type='^@'/>
<retval declared_type='NSPersistentStore*' type='@'/>
</method>
<method selector='addSQLitePersistentStoreAtPath:fromSeedDatabaseAtPath:withConfiguration:options:error:'>
<arg declared_type='NSString*' index='0' name='storePath' type='@'/>
<arg declared_type='NSString*' index='1' name='seedPath' type='@'/>
<arg declared_type='NSString*' index='2' name='nilOrConfigurationName' type='@'/>
<arg declared_type='NSDictionary*' index='3' name='nilOrOptions' type='@'/>
<arg declared_type='NSError**' index='4' name='error' type='^@'/>
<retval declared_type='NSPersistentStore*' type='@'/>
</method>
<method selector='createManagedObjectContexts'>
<retval declared_type='void' type='v'/>
</method>
<method selector='createPersistentStoreCoordinator'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='defaultStore'>
<retval declared_type='id' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithManagedObjectModel:'>
<arg declared_type='NSManagedObjectModel*' index='0' name='managedObjectModel' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPersistentStoreCoordinator:'>
<arg declared_type='NSPersistentStoreCoordinator*' index='0' name='persistentStoreCoordinator' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mainQueueManagedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectModel'>
<retval declared_type='NSManagedObjectModel*' type='@'/>
</method>
<method class_method='true' selector='migratePersistentStoreOfType:atURL:toModelAtURL:error:configuringModelsWithBlock:'>
<arg declared_type='NSString*' index='0' name='storeType' type='@'/>
<arg declared_type='NSURL*' index='1' name='storeURL' type='@'/>
<arg declared_type='NSURL*' index='2' name='destinationModelURL' type='@'/>
<arg declared_type='NSError**' index='3' name='error' type='^@'/>
<arg declared_type='void (^)(NSManagedObjectModel *, NSURL *)' function_pointer='true' index='4' name='block' type='@?'>
<arg declared_type='NSManagedObjectModel*' type='@'/>
<arg declared_type='NSURL*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='newChildManagedObjectContextWithConcurrencyType:'>
<arg declared_type='NSManagedObjectContextConcurrencyType' index='0' name='concurrencyType' type='I' type64='Q'/>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='newChildManagedObjectContextWithConcurrencyType:tracksChanges:'>
<arg declared_type='NSManagedObjectContextConcurrencyType' index='0' name='concurrencyType' type='I' type64='Q'/>
<arg declared_type='BOOL' index='1' name='tracksChanges' type='B'/>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='persistentStoreCoordinator'>
<retval declared_type='NSPersistentStoreCoordinator*' type='@'/>
</method>
<method selector='persistentStoreManagedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='resetPersistentStores:'>
<arg declared_type='NSError**' index='0' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='setDefaultStore:'>
<arg declared_type='RKManagedObjectStore*' index='0' name='managedObjectStore' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMainQueueManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' name='mainQueueManagedObjectContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg declared_type='id' index='0' name='managedObjectCache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectModel:'>
<arg declared_type='NSManagedObjectModel*' index='0' name='managedObjectModel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStoreCoordinator:'>
<arg declared_type='NSPersistentStoreCoordinator*' index='0' name='persistentStoreCoordinator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStoreManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' name='persistentStoreManagedObjectContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKMapperOperation'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='execute:'>
<arg declared_type='NSError**' index='0' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithRepresentation:mappingsDictionary:'>
<arg declared_type='id' index='0' name='representation' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='mappingsDictionary' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapRepresentation:atKeyPath:usingMapping:'>
<arg declared_type='id' index='0' name='mappableObject' type='@'/>
<arg declared_type='NSString*' index='1' name='keyPath' type='@'/>
<arg declared_type='RKMapping*' index='2' name='mapping' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapRepresentation:toObject:isNew:atKeyPath:usingMapping:metadataList:'>
<arg declared_type='id' index='0' name='mappableObject' type='@'/>
<arg declared_type='id' index='1' name='destinationObject' type='@'/>
<arg declared_type='BOOL' index='2' name='isNew' type='B'/>
<arg declared_type='NSString*' index='3' name='keyPath' type='@'/>
<arg declared_type='RKMapping*' index='4' name='mapping' type='@'/>
<arg declared_type='NSArray*' index='5' name='metadata' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mapRepresentations:atKeyPath:usingMapping:'>
<arg declared_type='NSArray*' index='0' name='mappableObjects' type='@'/>
<arg declared_type='NSString*' index='1' name='keyPath' type='@'/>
<arg declared_type='RKMapping*' index='2' name='mapping' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='mappingInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='mappingOperationDataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='mappingsDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='metadata'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='objectForRepresentation:withMapping:'>
<arg declared_type='id' index='0' name='representation' type='@'/>
<arg declared_type='RKMapping*' index='1' name='mapping' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='representation'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg declared_type='NSError*' index='0' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingOperationDataSource:'>
<arg declared_type='id' index='0' name='mappingOperationDataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg declared_type='RKMappingResult*' index='0' name='mappingResult' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingsDictionary:'>
<arg declared_type='NSDictionary*' index='0' name='mappingsDictionary' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMetadata:'>
<arg declared_type='NSDictionary*' index='0' name='metadata' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepresentation:'>
<arg declared_type='id' index='0' name='representation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObject:'>
<arg declared_type='id' index='0' name='targetObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetObject'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKMapping'>
<method selector='forceCollectionMapping'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEqualToMapping:'>
<arg declared_type='RKMapping*' index='0' name='otherMapping' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setForceCollectionMapping:'>
<arg declared_type='BOOL' index='0' name='forceCollectionMapping' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKMappingInfo'>
<method selector='dynamicMapping'>
<retval declared_type='RKDynamicMapping*' type='@'/>
</method>
<method selector='objectForKeyedSubscript:'>
<arg declared_type='id' index='0' name='key' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='propertyMappings'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='relationshipMappingInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setDynamicMapping:'>
<arg declared_type='RKDynamicMapping*' index='0' name='dynamicMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMapping:'>
<arg declared_type='RKObjectMapping*' index='0' name='objectMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKMappingOperation'>
<method selector='cancel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='destinationObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithSourceObject:destinationObject:mapping:'>
<arg declared_type='id' index='0' name='sourceObject' type='@'/>
<arg declared_type='id' index='1' name='destinationObject' type='@'/>
<arg declared_type='RKMapping*' index='2' name='objectOrDynamicMapping' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSourceObject:destinationObject:mapping:metadataList:'>
<arg declared_type='id' index='0' name='sourceObject' type='@'/>
<arg declared_type='id' index='1' name='destinationObject' type='@'/>
<arg declared_type='RKMapping*' index='2' name='objectOrDynamicMapping' type='@'/>
<arg declared_type='NSArray*' index='3' name='metadataList' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isCancelled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNewDestinationObject'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method selector='mappingInfo'>
<retval declared_type='RKMappingInfo*' type='@'/>
</method>
<method selector='metadataList'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='performMapping:'>
<arg declared_type='NSError**' index='0' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id' index='0' name='dataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDestinationObject:'>
<arg declared_type='id' index='0' name='destinationObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg declared_type='NSError*' index='0' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:'>
<arg declared_type='RKMapping*' index='0' name='mapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMetadataList:'>
<arg declared_type='NSArray*' index='0' name='metadataList' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMapping:'>
<arg declared_type='RKObjectMapping*' index='0' name='objectMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceObject:'>
<arg declared_type='id' index='0' name='sourceObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='start'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKMappingResult'>
<method selector='array'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='dictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='firstObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDictionary:'>
<arg declared_type='NSDictionary*' index='0' name='dictionary' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='set'>
<retval declared_type='NSSet*' type='@'/>
</method>
</class>
<class name='RKObjectManager'>
<method selector='HTTPClient'>
<retval declared_type='AFHTTPClient*' type='@'/>
</method>
<method selector='addFetchRequestBlock:'>
<arg declared_type='NSFetchRequest *(^)(NSURL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRequestDescriptor:'>
<arg declared_type='RKRequestDescriptor*' index='0' name='requestDescriptor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRequestDescriptorsFromArray:'>
<arg declared_type='NSArray*' index='0' name='requestDescriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addResponseDescriptor:'>
<arg declared_type='RKResponseDescriptor*' index='0' name='responseDescriptor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addResponseDescriptorsFromArray:'>
<arg declared_type='NSArray*' index='0' name='responseDescriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appropriateObjectRequestOperationWithObject:method:path:parameters:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='RKRequestMethod' index='1' name='method' type='i' type64='q'/>
<arg declared_type='NSString*' index='2' name='path' type='@'/>
<arg declared_type='NSDictionary*' index='3' name='parameters' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='cancelAllObjectRequestOperationsWithMethod:matchingPathPattern:'>
<arg declared_type='RKRequestMethod' index='0' name='method' type='i' type64='q'/>
<arg declared_type='NSString*' index='1' name='pathPattern' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='defaultHeaders'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='deleteObject:path:parameters:success:failure:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSString*' index='1' name='path' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='parameters' type='@'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfObjectRequestOperations:progress:completion:'>
<arg declared_type='NSArray*' index='0' name='operations' type='@'/>
<arg declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true' index='1' name='progress' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSArray *)' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfObjectRequestOperationsWithRoute:objects:progress:completion:'>
<arg declared_type='RKRoute*' index='0' name='route' type='@'/>
<arg declared_type='NSArray*' index='1' name='objects' type='@'/>
<arg declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true' index='2' name='progress' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSArray *)' function_pointer='true' index='3' name='completion' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueObjectRequestOperation:'>
<arg declared_type='RKObjectRequestOperation*' index='0' name='objectRequestOperation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueuedObjectRequestOperationsWithMethod:matchingPathPattern:'>
<arg declared_type='RKRequestMethod' index='0' name='method' type='i' type64='q'/>
<arg declared_type='NSString*' index='1' name='pathPattern' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='fetchRequestBlocks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='getObject:path:parameters:success:failure:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSString*' index='1' name='path' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='parameters' type='@'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getObjectsAtPath:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getObjectsAtPathForRelationship:ofObject:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='relationshipName' type='@'/>
<arg declared_type='id' index='1' name='object' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='parameters' type='@'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getObjectsAtPathForRouteNamed:object:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='routeName' type='@'/>
<arg declared_type='id' index='1' name='object' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='parameters' type='@'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithHTTPClient:'>
<arg declared_type='AFHTTPClient*' index='0' name='client' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectRequestOperationWithRequest:managedObjectContext:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSManagedObjectContext*' index='1' name='managedObjectContext' type='@'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='RKManagedObjectRequestOperation*' type='@'/>
</method>
<method selector='managedObjectStore'>
<retval declared_type='RKManagedObjectStore*' type='@'/>
</method>
<method class_method='true' selector='managerWithBaseURL:'>
<arg declared_type='NSURL*' index='0' name='baseURL' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='multipartFormRequestWithObject:method:path:parameters:constructingBodyWithBlock:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='RKRequestMethod' index='1' name='method' type='i' type64='q'/>
<arg declared_type='NSString*' index='2' name='path' type='@'/>
<arg declared_type='NSDictionary*' index='3' name='parameters' type='@'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='4' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='objectRequestOperationWithRequest:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' index='1' name='success' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' index='2' name='failure' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='RKObjectRequestOperation*' type='@'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='paginationMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='paginatorWithPathPattern:'>
<arg declared_type='NSString*' index='0' name='pathPattern' type='@'/>
<retval declared_type='RKPaginator*' type='@'/>
</method>
<method selector='patchObject:path:parameters:success:failure:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSString*' index='1' name='path' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='parameters' type='@'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='postObject:path:parameters:success:failure:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSString*' index='1' name='path' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='parameters' type='@'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='putObject:path:parameters:success:failure:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSString*' index='1' name='path' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='parameters' type='@'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerRequestOperationClass:'>
<arg declared_type='Class' index='0' name='operationClass' type='#'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeRequestDescriptor:'>
<arg declared_type='RKRequestDescriptor*' index='0' name='requestDescriptor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeResponseDescriptor:'>
<arg declared_type='RKResponseDescriptor*' index='0' name='responseDescriptor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='requestSerializationMIMEType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='requestWithObject:method:path:parameters:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='RKRequestMethod' index='1' name='method' type='i' type64='q'/>
<arg declared_type='NSString*' index='2' name='path' type='@'/>
<arg declared_type='NSDictionary*' index='3' name='parameters' type='@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='requestWithPathForRelationship:ofObject:method:parameters:'>
<arg declared_type='NSString*' index='0' name='relationship' type='@'/>
<arg declared_type='id' index='1' name='object' type='@'/>
<arg declared_type='RKRequestMethod' index='2' name='method' type='i' type64='q'/>
<arg declared_type='NSDictionary*' index='3' name='parameters' type='@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='requestWithPathForRouteNamed:object:parameters:'>
<arg declared_type='NSString*' index='0' name='routeName' type='@'/>
<arg declared_type='id' index='1' name='object' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='parameters' type='@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='responseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='router'>
<retval declared_type='RKRouter*' type='@'/>
</method>
<method selector='setAcceptHeaderWithMIMEType:'>
<arg declared_type='NSString*' index='0' name='MIMEType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPClient:'>
<arg declared_type='AFHTTPClient*' index='0' name='HTTPClient' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectStore:'>
<arg declared_type='RKManagedObjectStore*' index='0' name='managedObjectStore' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOperationQueue:'>
<arg declared_type='NSOperationQueue*' index='0' name='operationQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaginationMapping:'>
<arg declared_type='RKObjectMapping*' index='0' name='paginationMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestSerializationMIMEType:'>
<arg declared_type='NSString*' index='0' name='requestSerializationMIMEType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRouter:'>
<arg declared_type='RKRouter*' index='0' name='router' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setSharedManager:'>
<arg declared_type='RKObjectManager*' index='0' name='manager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='id' type='@'/>
</method>
<method selector='unregisterRequestOperationClass:'>
<arg declared_type='Class' index='0' name='operationClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKObjectMapping'>
<method selector='addAttributeMappingFromKeyOfRepresentationToAttribute:'>
<arg declared_type='NSString*' index='0' name='attributeName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAttributeMappingToKeyOfRepresentationFromAttribute:'>
<arg declared_type='NSString*' index='0' name='attributeName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAttributeMappingsFromArray:'>
<arg declared_type='NSArray*' index='0' name='arrayOfAttributeNamesOrMappings' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAttributeMappingsFromDictionary:'>
<arg declared_type='NSDictionary*' index='0' name='keyPathToAttributeNames' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='addDefaultDateFormatter:'>
<arg declared_type='NSFormatter*' index='0' name='dateFormatter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='addDefaultDateFormatterForString:inTimeZone:'>
<arg declared_type='NSString*' index='0' name='dateFormatString' type='@'/>
<arg declared_type='NSTimeZone*' index='1' name='nilOrTimeZone' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPropertyMapping:'>
<arg declared_type='RKPropertyMapping*' index='0' name='propertyMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPropertyMappingsFromArray:'>
<arg declared_type='NSArray*' index='0' name='arrayOfPropertyMappings' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRelationshipMappingWithSourceKeyPath:mapping:'>
<arg declared_type='NSString*' index='0' name='sourceKeyPath' type='@'/>
<arg declared_type='RKMapping*' index='1' name='mapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='assignsDefaultValueForMissingAttributes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assignsNilForMissingRelationships'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attributeMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='classForKeyPath:'>
<arg declared_type='NSString*' index='0' name='keyPath' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='classForProperty:'>
<arg declared_type='NSString*' index='0' name='propertyName' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='dateFormatters'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='defaultDateFormatters'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='defaultValueForAttribute:'>
<arg declared_type='NSString*' index='0' name='attributeName' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithClass:'>
<arg declared_type='Class' index='0' name='objectClass' type='#'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inverseMapping'>
<retval declared_type='id' type='@'/>
</method>
<method selector='inverseMappingWithPropertyMappingsPassingTest:'>
<arg declared_type='BOOL (^)(RKPropertyMapping *)' function_pointer='true' index='0' name='predicate' type='@?'>
<arg declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='keyAttributeMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='keyPathAttributeMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='mappingForClass:'>
<arg declared_type='Class' index='0' name='objectClass' type='#'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingForDestinationKeyPath:'>
<arg declared_type='NSString*' index='0' name='destinationKeyPath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingForSourceKeyPath:'>
<arg declared_type='NSString*' index='0' name='sourceKeyPath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='performKeyValueValidation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='performsKeyValueValidation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='preferredDateFormatter'>
<retval declared_type='NSFormatter*' type='@'/>
</method>
<method selector='preferredDateFormatter'>
<retval declared_type='NSFormatter*' type='@'/>
</method>
<method selector='propertyMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='propertyMappingsByDestinationKeyPath'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='propertyMappingsBySourceKeyPath'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='relationshipMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removePropertyMapping:'>
<arg declared_type='RKPropertyMapping*' index='0' name='propertyMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='requestMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='setAssignsDefaultValueForMissingAttributes:'>
<arg declared_type='BOOL' index='0' name='assignsDefaultValueForMissingAttributes' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAssignsNilForMissingRelationships:'>
<arg declared_type='BOOL' index='0' name='assignsNilForMissingRelationships' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDateFormatters:'>
<arg declared_type='NSArray*' index='0' name='dateFormatters' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultDateFormatters:'>
<arg declared_type='NSArray*' index='0' name='dateFormatters' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultSourceToDestinationKeyTransformationBlock:'>
<arg declared_type='NSString *(^)(RKObjectMapping *, NSString *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='RKObjectMapping*' type='@'/>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNilForMissingRelationships'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setObjectClass:'>
<arg declared_type='Class' index='0' name='objectClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPerformKeyValueValidation:'>
<arg declared_type='BOOL' index='0' name='performKeyValueValidation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPerformsKeyValueValidation:'>
<arg declared_type='BOOL' index='0' name='performsKeyValueValidation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setPreferredDateFormatter:'>
<arg declared_type='NSFormatter*' index='0' name='dateFormatter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredDateFormatter:'>
<arg declared_type='NSFormatter*' index='0' name='preferredDateFormatter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSetDefaultValueForMissingAttributes:'>
<arg declared_type='BOOL' index='0' name='setDefaultValueForMissingAttributes' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSetNilForMissingRelationships:'>
<arg declared_type='BOOL' index='0' name='setNilForMissingRelationships' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceToDestinationKeyTransformationBlock:'>
<arg declared_type='NSString *(^)(RKObjectMapping *, NSString *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='RKObjectMapping*' type='@'/>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValueTransformer:'>
<arg declared_type='id' index='0' name='valueTransformer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldSetDefaultValueForMissingAttributes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='valueTransformer'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKObjectMappingMatcher'>
<method class_method='true' selector='matcherWithKeyPath:expectedClass:objectMapping:'>
<arg declared_type='NSString*' index='0' name='keyPath' type='@'/>
<arg declared_type='Class' index='1' name='expectedClass' type='#'/>
<arg declared_type='RKObjectMapping*' index='2' name='objectMapping' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='matcherWithKeyPath:expectedValue:objectMapping:'>
<arg declared_type='NSString*' index='0' name='keyPath' type='@'/>
<arg declared_type='id' index='1' name='expectedValue' type='@'/>
<arg declared_type='RKObjectMapping*' index='2' name='objectMapping' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='matcherWithKeyPath:expectedValueMap:'>
<arg declared_type='NSString*' index='0' name='keyPath' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='valueToObjectMapping' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='matcherWithPossibleMappings:block:'>
<arg declared_type='NSArray*' index='0' name='mappings' type='@'/>
<arg declared_type='RKObjectMapping *(^)(id)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='RKObjectMapping*' type='@'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='matcherWithPredicate:objectMapping:'>
<arg declared_type='NSPredicate*' index='0' name='predicate' type='@'/>
<arg declared_type='RKObjectMapping*' index='1' name='objectMapping' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='matches:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='possibleObjectMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setObjectMapping:'>
<arg declared_type='RKObjectMapping*' index='0' name='objectMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKObjectParameterization'>
<method class_method='true' selector='parametersWithObject:requestDescriptor:error:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='RKRequestDescriptor*' index='1' name='requestDescriptor' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='RKObjectRequestOperation'>
<method selector='HTTPRequestOperation'>
<retval declared_type='RKHTTPRequestOperation*' type='@'/>
</method>
<method class_method='true' selector='canProcessRequest:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='failureCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='initWithHTTPRequestOperation:responseDescriptors:'>
<arg declared_type='RKHTTPRequestOperation*' index='0' name='requestOperation' type='@'/>
<arg declared_type='NSArray*' index='1' name='responseDescriptors' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRequest:responseDescriptors:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSArray*' index='1' name='responseDescriptors' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingMetadata'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='performMappingOnResponseWithCompletionBlock:'>
<arg declared_type='void (^)(RKMappingResult *, NSError *)' function_pointer='true' index='0' name='completionBlock' type='@?'>
<arg declared_type='RKMappingResult*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='responseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='responseMappingQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' index='0' name='success' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' index='1' name='failure' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg declared_type='NSError*' index='0' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg declared_type='dispatch_queue_t' index='0' name='failureCallbackQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPRequestOperation:'>
<arg declared_type='RKHTTPRequestOperation*' index='0' name='HTTPRequestOperation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingMetadata:'>
<arg declared_type='NSDictionary*' index='0' name='mappingMetadata' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg declared_type='RKMappingResult*' index='0' name='mappingResult' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseDescriptors:'>
<arg declared_type='NSArray*' index='0' name='responseDescriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg declared_type='dispatch_queue_t' index='0' name='successCallbackQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObject:'>
<arg declared_type='id' index='0' name='targetObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillMapDeserializedResponseBlock:'>
<arg declared_type='id (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='successCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='targetObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='willFinish'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKPaginator'>
<method selector='URL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='cancel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='currentPage'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='fetchRequestBlocks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='hasNextPage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasObjectCount'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasPageCount'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasPreviousPage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithRequest:paginationMapping:responseDescriptors:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='RKObjectMapping*' index='1' name='paginationMapping' type='@'/>
<arg declared_type='NSArray*' index='2' name='responseDescriptors' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadNextPage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadPage:'>
<arg declared_type='NSUInteger' index='0' name='pageNumber' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadPreviousPage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='objectCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='objectRequestOperation'>
<retval declared_type='RKObjectRequestOperation*' type='@'/>
</method>
<method selector='offset'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='pageCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='paginationMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='patternURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='perPage'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg declared_type='void (^)(RKPaginator *, NSArray *, NSUInteger)' function_pointer='true' index='0' name='success' type='@?'>
<arg declared_type='RKPaginator*' type='@'/>
<arg declared_type='NSArray*' type='@'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKPaginator *, NSError *)' function_pointer='true' index='1' name='failure' type='@?'>
<arg declared_type='RKPaginator*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg declared_type='NSError*' index='0' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFetchRequestBlocks:'>
<arg declared_type='NSArray*' index='0' name='fetchRequestBlocks' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPOperationClass:'>
<arg declared_type='Class' index='0' name='operationClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg declared_type='id' index='0' name='managedObjectCache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' name='managedObjectContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg declared_type='RKMappingResult*' index='0' name='mappingResult' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectRequestOperation:'>
<arg declared_type='RKObjectRequestOperation*' index='0' name='objectRequestOperation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOperationQueue:'>
<arg declared_type='NSOperationQueue*' index='0' name='operationQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaginationMapping:'>
<arg declared_type='RKObjectMapping*' index='0' name='paginationMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPerPage:'>
<arg declared_type='NSUInteger' index='0' name='perPage' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKPathMatcher'>
<method selector='matchesPath:tokenizeQueryStrings:parsedArguments:'>
<arg declared_type='NSString*' index='0' name='pathString' type='@'/>
<arg declared_type='BOOL' index='1' name='shouldTokenize' type='B'/>
<arg declared_type='NSDictionary**' index='2' name='arguments' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchesPattern:tokenizeQueryStrings:parsedArguments:'>
<arg declared_type='NSString*' index='0' name='patternString' type='@'/>
<arg declared_type='BOOL' index='1' name='shouldTokenize' type='B'/>
<arg declared_type='NSDictionary**' index='2' name='arguments' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pathFromObject:addingEscapes:interpolatedParameters:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='BOOL' index='1' name='addEscapes' type='B'/>
<arg declared_type='NSDictionary**' index='2' name='interpolatedParameters' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='pathMatcherWithPath:'>
<arg declared_type='NSString*' index='0' name='pathString' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='pathMatcherWithPattern:'>
<arg declared_type='NSString*' index='0' name='patternString' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='queryParameters'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='RKPropertyInspector'>
<method selector='classForPropertyNamed:ofClass:isPrimitive:'>
<arg declared_type='NSString*' index='0' name='propertyName' type='@'/>
<arg declared_type='Class' index='1' name='objectClass' type='#'/>
<arg declared_type='BOOL*' index='2' name='isPrimitive' type='^B'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='classForPropertyNamed:ofEntity:'>
<arg declared_type='NSString*' index='0' name='propertyName' type='@'/>
<arg declared_type='NSEntityDescription*' index='1' name='entity' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='propertyInspectionForClass:'>
<arg declared_type='Class' index='0' name='objectClass' type='#'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='propertyInspectionForEntity:'>
<arg declared_type='NSEntityDescription*' index='0' name='entity' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='sharedInspector'>
<retval declared_type='RKPropertyInspector*' type='@'/>
</method>
</class>
<class name='RKPropertyInspectorPropertyInfo'>
<method selector='isPrimitive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyValueCodingClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='propertyInfoWithName:keyValueClass:isPrimitive:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='Class' index='1' name='kvClass' type='#'/>
<arg declared_type='BOOL' index='2' name='isPrimitive' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setKeyValueCodingClass:'>
<arg declared_type='Class' index='0' name='keyValueCodingClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKPropertyMapping'>
<method selector='destinationKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='isEqualToMapping:'>
<arg declared_type='RKPropertyMapping*' index='0' name='otherMapping' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='propertyValueClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='setObjectMapping:'>
<arg declared_type='RKObjectMapping*' index='0' name='objectMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPropertyValueClass:'>
<arg declared_type='Class' index='0' name='propertyValueClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValueTransformer:'>
<arg declared_type='id' index='0' name='valueTransformer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='valueTransformer'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKRelationshipConnectionOperation'>
<method selector='connectedValuesByRelationshipName'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='connections'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithManagedObject:connections:managedObjectCache:'>
<arg declared_type='NSManagedObject*' index='0' name='managedObject' type='@'/>
<arg declared_type='NSArray*' index='1' name='connections' type='@'/>
<arg declared_type='id' index='2' name='managedObjectCache' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObject'>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setConnectedValuesByRelationshipName:'>
<arg declared_type='NSDictionary*' index='0' name='connectedValuesByRelationshipName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConnectionBlock:'>
<arg declared_type='void (^)(RKRelationshipConnectionOperation *, RKConnectionDescription *, id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='RKRelationshipConnectionOperation*' type='@'/>
<arg declared_type='RKConnectionDescription*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConnections:'>
<arg declared_type='NSArray*' index='0' name='connections' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObject:'>
<arg declared_type='NSManagedObject*' index='0' name='managedObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg declared_type='id' index='0' name='managedObjectCache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKRelationshipMapping'>
<method selector='assignmentPolicy'>
<retval declared_type='RKAssignmentPolicy' type='i'/>
</method>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method class_method='true' selector='relationshipMappingFromKeyPath:toKeyPath:withMapping:'>
<arg declared_type='NSString*' index='0' name='sourceKeyPath' type='@'/>
<arg declared_type='NSString*' index='1' name='destinationKeyPath' type='@'/>
<arg declared_type='RKMapping*' index='2' name='mapping' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAssignmentPolicy:'>
<arg declared_type='RKAssignmentPolicy' index='0' name='assignmentPolicy' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:'>
<arg declared_type='RKMapping*' index='0' name='mapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKRequestDescriptor'>
<method selector='isEqualToRequestDescriptor:'>
<arg declared_type='RKRequestDescriptor*' index='0' name='otherDescriptor' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method selector='method'>
<retval declared_type='RKRequestMethod' type='i' type64='q'/>
</method>
<method selector='objectClass'>
<retval declared_type='Class' type='#'/>
</method>
<method class_method='true' selector='requestDescriptorWithMapping:objectClass:rootKeyPath:'>
<arg declared_type='RKMapping*' index='0' name='mapping' type='@'/>
<arg declared_type='Class' index='1' name='objectClass' type='#'/>
<arg declared_type='NSString*' index='2' name='rootKeyPath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='requestDescriptorWithMapping:objectClass:rootKeyPath:method:'>
<arg declared_type='RKMapping*' index='0' name='mapping' type='@'/>
<arg declared_type='Class' index='1' name='objectClass' type='#'/>
<arg declared_type='NSString*' index='2' name='rootKeyPath' type='@'/>
<arg declared_type='RKRequestMethod' index='3' name='method' type='i' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rootKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setMapping:'>
<arg declared_type='RKMapping*' index='0' name='mapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectClass:'>
<arg declared_type='Class' index='0' name='objectClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKResponseDescriptor'>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='isEqualToResponseDescriptor:'>
<arg declared_type='RKResponseDescriptor*' index='0' name='otherDescriptor' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method selector='matchesPath:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchesResponse:'>
<arg declared_type='NSHTTPURLResponse*' index='0' name='response' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchesURL:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='method'>
<retval declared_type='RKRequestMethod' type='i' type64='q'/>
</method>
<method selector='pathPattern'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='responseDescriptorWithMapping:method:pathPattern:keyPath:statusCodes:'>
<arg declared_type='RKMapping*' index='0' name='mapping' type='@'/>
<arg declared_type='RKRequestMethod' index='1' name='method' type='i' type64='q'/>
<arg declared_type='NSString*' index='2' name='pathPattern' type='@'/>
<arg declared_type='NSString*' index='3' name='keyPath' type='@'/>
<arg declared_type='NSIndexSet*' index='4' name='statusCodes' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='responseDescriptorWithMapping:pathPattern:keyPath:statusCodes:'>
<arg declared_type='RKMapping*' index='0' name='mapping' type='@'/>
<arg declared_type='NSString*' index='1' name='pathPattern' type='@'/>
<arg declared_type='NSString*' index='2' name='keyPath' type='@'/>
<arg declared_type='NSIndexSet*' index='3' name='statusCodes' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setBaseURL:'>
<arg declared_type='NSURL*' index='0' name='baseURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:'>
<arg declared_type='RKMapping*' index='0' name='mapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='statusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
</class>
<class name='RKResponseMapperOperation'>
<method selector='data'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithRequest:response:data:responseDescriptors:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSHTTPURLResponse*' index='1' name='response' type='@'/>
<arg declared_type='NSData*' index='2' name='data' type='@'/>
<arg declared_type='NSArray*' index='3' name='responseDescriptors' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapperDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingMetadata'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='matchingResponseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='registerMappingOperationDataSourceClass:'>
<arg declared_type='Class*' index='0' name='dataSourceClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSHTTPURLResponse*' type='@'/>
</method>
<method selector='responseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='responseMappingsDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setData:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidFinishMappingBlock:'>
<arg declared_type='void (^)(RKMappingResult *, NSError *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='RKMappingResult*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg declared_type='NSError*' index='0' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapperDelegate:'>
<arg declared_type='id' index='0' name='mapperDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingMetadata:'>
<arg declared_type='NSDictionary*' index='0' name='mappingMetadata' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg declared_type='RKMappingResult*' index='0' name='mappingResult' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatchingResponseDescriptors:'>
<arg declared_type='NSArray*' index='0' name='matchingResponseDescriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequest:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponse:'>
<arg declared_type='NSHTTPURLResponse*' index='0' name='response' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseDescriptors:'>
<arg declared_type='NSArray*' index='0' name='responseDescriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseMappingsDictionary:'>
<arg declared_type='NSDictionary*' index='0' name='responseMappingsDictionary' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObject:'>
<arg declared_type='id' index='0' name='targetObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTreatsEmptyResponseAsSuccess:'>
<arg declared_type='BOOL' index='0' name='treatsEmptyResponseAsSuccess' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillMapDeserializedResponseBlock:'>
<arg declared_type='id (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='treatsEmptyResponseAsSuccess'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKRoute'>
<method selector='isClassRoute'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNamedRoute'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRelationshipRoute'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='method'>
<retval declared_type='RKRequestMethod' type='i' type64='q'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='objectClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='pathPattern'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='routeWithClass:pathPattern:method:'>
<arg declared_type='Class' index='0' name='objectClass' type='#'/>
<arg declared_type='NSString*' index='1' name='pathPattern' type='@'/>
<arg declared_type='RKRequestMethod' index='2' name='method' type='i' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='routeWithName:pathPattern:method:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSString*' index='1' name='pathPattern' type='@'/>
<arg declared_type='RKRequestMethod' index='2' name='method' type='i' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='routeWithRelationshipName:objectClass:pathPattern:method:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='Class' index='1' name='objectClass' type='#'/>
<arg declared_type='NSString*' index='2' name='pathPattern' type='@'/>
<arg declared_type='RKRequestMethod' index='3' name='method' type='i' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectClass:'>
<arg declared_type='Class' index='0' name='objectClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPathPattern:'>
<arg declared_type='NSString*' index='0' name='pathPattern' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldEscapePath:'>
<arg declared_type='BOOL' index='0' name='shouldEscapePath' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldEscapePath'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKRouteSet'>
<method selector='addRoute:'>
<arg declared_type='RKRoute*' index='0' name='route' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRoutes:'>
<arg declared_type='NSArray*' index='0' name='routes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='classRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='containsRoute:'>
<arg declared_type='RKRoute*' index='0' name='route' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='namedRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='relationshipRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeRoute:'>
<arg declared_type='RKRoute*' index='0' name='route' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='routeForClass:method:'>
<arg declared_type='Class' index='0' name='objectClass' type='#'/>
<arg declared_type='RKRequestMethod' index='1' name='method' type='i' type64='q'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routeForName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routeForObject:method:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='RKRequestMethod' index='1' name='method' type='i' type64='q'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routeForRelationship:ofClass:method:'>
<arg declared_type='NSString*' index='0' name='relationship' type='@'/>
<arg declared_type='Class' index='1' name='objectClass' type='#'/>
<arg declared_type='RKRequestMethod' index='2' name='method' type='i' type64='q'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routesForClass:'>
<arg declared_type='Class' index='0' name='objectClass' type='#'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='routesForObject:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='routesForRelationship:ofClass:'>
<arg declared_type='NSString*' index='0' name='relationshipName' type='@'/>
<arg declared_type='Class' index='1' name='objectClass' type='#'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='RKRouter'>
<method selector='URLForObject:method:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='RKRequestMethod' index='1' name='method' type='i' type64='q'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLForRelationship:ofObject:method:'>
<arg declared_type='NSString*' index='0' name='relationshipName' type='@'/>
<arg declared_type='id' index='1' name='object' type='@'/>
<arg declared_type='RKRequestMethod' index='2' name='method' type='i' type64='q'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLForRouteNamed:method:object:'>
<arg declared_type='NSString*' index='0' name='routeName' type='@'/>
<arg declared_type='RKRequestMethod*' index='1' name='method' type='^i' type64='^q' type_modifier='o'/>
<arg declared_type='id' index='2' name='object' type='@'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLWithRoute:object:'>
<arg declared_type='RKRoute*' index='0' name='route' type='@'/>
<arg declared_type='id' index='1' name='object' type='@'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='initWithBaseURL:'>
<arg declared_type='NSURL*' index='0' name='baseURL' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='routeSet'>
<retval declared_type='RKRouteSet*' type='@'/>
</method>
<method selector='setBaseURL:'>
<arg declared_type='NSURL*' index='0' name='baseURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRouteSet:'>
<arg declared_type='RKRouteSet*' index='0' name='routeSet' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKStringTokenizer'>
<method selector='setStopWords:'>
<arg declared_type='NSSet*' index='0' name='stopWords' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopWords'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='tokenize:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</method>
</class>
<class name='RKValueTransformer'>
<method class_method='true' selector='arrayToOrderedSetValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='arrayToSetValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='decimalNumberToNumberValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='decimalNumberToStringValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='defaultValueTransformer'>
<retval declared_type='RKCompoundValueTransformer*' type='@'/>
</method>
<method class_method='true' selector='identityValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='iso8601TimestampToDateValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='keyOfDictionaryValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='keyedArchivingValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mutableValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='nullValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='numberToStringValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='objectToCollectionValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='setDefaultValueTransformer:'>
<arg declared_type='RKCompoundValueTransformer*' index='0' name='compoundValueTransformer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='stringToURLValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='stringValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='timeIntervalSince1970ToDateValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='SOCPattern'>
<method selector='initWithString:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='parameterDictionaryFromSourceString:'>
<arg declared_type='NSString*' index='0' name='sourceString' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='patternWithString:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='performSelector:onObject:sourceString:'>
<arg declared_type='SEL' index='0' name='selector' type=':'/>
<arg declared_type='id' index='1' name='object' type='@'/>
<arg declared_type='NSString*' index='2' name='sourceString' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='stringFromObject:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringFromObject:withBlock:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSString *(^)(NSString *)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringMatches:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='TKEvent'>
<method selector='destinationState'>
<retval declared_type='TKState*' type='@'/>
</method>
<method class_method='true' selector='eventWithName:transitioningFromStates:toState:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSArray*' index='1' name='sourceStates' type='@'/>
<arg declared_type='TKState*' index='2' name='destinationState' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setDestinationState:'>
<arg declared_type='TKState*' index='0' name='destinationState' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidFireEventBlock:'>
<arg declared_type='void (^)(TKEvent *, TKTransition *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='TKEvent*' type='@'/>
<arg declared_type='TKTransition*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldFireEventBlock:'>
<arg declared_type='BOOL (^)(TKEvent *, TKTransition *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='TKEvent*' type='@'/>
<arg declared_type='TKTransition*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillFireEventBlock:'>
<arg declared_type='void (^)(TKEvent *, TKTransition *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='TKEvent*' type='@'/>
<arg declared_type='TKTransition*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceStates'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='TKState'>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setDidEnterStateBlock:'>
<arg declared_type='void (^)(TKState *, TKTransition *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='TKState*' type='@'/>
<arg declared_type='TKTransition*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidExitStateBlock:'>
<arg declared_type='void (^)(TKState *, TKTransition *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='TKState*' type='@'/>
<arg declared_type='TKTransition*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillEnterStateBlock:'>
<arg declared_type='void (^)(TKState *, TKTransition *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='TKState*' type='@'/>
<arg declared_type='TKTransition*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillExitStateBlock:'>
<arg declared_type='void (^)(TKState *, TKTransition *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='TKState*' type='@'/>
<arg declared_type='TKTransition*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='stateWithName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='TKStateMachine'>
<method selector='activate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='addEvent:'>
<arg declared_type='TKEvent*' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addEvents:'>
<arg declared_type='NSArray*' index='0' name='arrayOfEvents' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addState:'>
<arg declared_type='TKState*' index='0' name='state' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addStates:'>
<arg declared_type='NSArray*' index='0' name='arrayOfStates' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='canFireEvent:'>
<arg declared_type='id' index='0' name='eventOrEventName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='currentState'>
<retval declared_type='TKState*' type='@'/>
</method>
<method selector='eventNamed:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='TKEvent*' type='@'/>
</method>
<method selector='events'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='fireEvent:userInfo:error:'>
<arg declared_type='id' index='0' name='eventOrEventName' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='userInfo' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initialState'>
<retval declared_type='TKState*' type='@'/>
</method>
<method selector='isActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInState:'>
<arg declared_type='id' index='0' name='stateOrStateName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCurrentState:'>
<arg declared_type='TKState*' index='0' name='currentState' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInitialState:'>
<arg declared_type='TKState*' index='0' name='initialState' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stateNamed:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='TKState*' type='@'/>
</method>
<method selector='states'>
<retval declared_type='NSSet*' type='@'/>
</method>
</class>
<class name='TKTransition'>
<method selector='destinationState'>
<retval declared_type='TKState*' type='@'/>
</method>
<method selector='event'>
<retval declared_type='TKEvent*' type='@'/>
</method>
<method selector='setDestinationState:'>
<arg declared_type='TKState*' index='0' name='destinationState' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEvent:'>
<arg declared_type='TKEvent*' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceState:'>
<arg declared_type='TKState*' index='0' name='sourceState' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStateMachine:'>
<arg declared_type='TKStateMachine*' index='0' name='stateMachine' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceState'>
<retval declared_type='TKState*' type='@'/>
</method>
<method selector='stateMachine'>
<retval declared_type='TKStateMachine*' type='@'/>
</method>
<method class_method='true' selector='transitionForEvent:fromState:inStateMachine:userInfo:'>
<arg declared_type='TKEvent*' index='0' name='event' type='@'/>
<arg declared_type='TKState*' index='1' name='sourceState' type='@'/>
<arg declared_type='TKStateMachine*' index='2' name='stateMachine' type='@'/>
<arg declared_type='NSDictionary*' index='3' name='userInfo' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='UIImageView'>
<method selector='cancelImageRequestOperation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholderImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURLRequest:placeholderImage:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='urlRequest' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholderImage' type='@'/>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='AFMultipartFormData'>
<method selector='appendPartWithFileData:name:fileName:mimeType:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='NSString*' index='3' name='mimeType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileURL:name:error:' type='B20@0:4@8@12^@16' type64='B40@0:8@16@24^@32'>
<arg declared_type='NSURL*' index='0' name='fileURL' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:' type='B28@0:4@8@12@16@20^@24' type64='B56@0:8@16@24@32@40^@48'>
<arg declared_type='NSURL*' index='0' name='fileURL' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='NSString*' index='3' name='mimeType' type='@'/>
<arg declared_type='NSError**' index='4' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFormData:name:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithHeaders:body:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSDictionary*' index='0' name='headers' type='@'/>
<arg declared_type='NSData*' index='1' name='body' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithInputStream:name:fileName:length:mimeType:' type='v32@0:4@8@12@16Q20@28' type64='v56@0:8@16@24@32Q40@48'>
<arg declared_type='NSInputStream*' index='0' name='inputStream' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='unsigned long long' index='3' name='length' type='Q'/>
<arg declared_type='NSString*' index='4' name='mimeType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:' type='v20@0:4I8d12' type64='v32@0:8Q16d24'>
<arg declared_type='NSUInteger' index='0' name='numberOfBytes' type='I' type64='Q'/>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKLogging'>
<method class_method='true' selector='logWithComponent:level:path:line:function:format:' type='v32@0:4I8I12r*16I20r*24@28' type64='v52@0:8I16I20r*24I32r*36@44' variadic='true'>
<arg declared_type='_RKlcl_component_t' index='0' name='component' type='I'/>
<arg declared_type='_RKlcl_level_t' index='1' name='level' type='I'/>
<arg const='true' declared_type='char*' index='2' name='file' type='*'/>
<arg declared_type='uint32_t' index='3' name='line' type='I'/>
<arg const='true' declared_type='char*' index='4' name='function' type='*'/>
<arg declared_type='NSString*' index='5' name='format' printf_format='true' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKManagedObjectCaching'>
<method selector='didCreateObject:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSManagedObject*' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didDeleteObject:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSManagedObject*' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didFetchObject:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSManagedObject*' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectsWithEntity:attributeValues:inManagedObjectContext:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='NSEntityDescription*' index='0' name='entity' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='attributeValues' type='@'/>
<arg declared_type='NSManagedObjectContext*' index='2' name='managedObjectContext' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RKMapperOperationDelegate'>
<method selector='mapper:didFailMappingOperation:forKeyPath:withError:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='RKMapperOperation*' index='0' name='mapper' type='@'/>
<arg declared_type='RKMappingOperation*' index='1' name='mappingOperation' type='@'/>
<arg declared_type='NSString*' index='2' name='keyPath' type='@'/>
<arg declared_type='NSError*' index='3' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didFindRepresentationOrArrayOfRepresentations:atKeyPath:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='RKMapperOperation*' index='0' name='mapper' type='@'/>
<arg declared_type='id' index='1' name='dictionaryOrArrayOfDictionaries' type='@'/>
<arg declared_type='NSString*' index='2' name='keyPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didFinishMappingOperation:forKeyPath:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='RKMapperOperation*' index='0' name='mapper' type='@'/>
<arg declared_type='RKMappingOperation*' index='1' name='mappingOperation' type='@'/>
<arg declared_type='NSString*' index='2' name='keyPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didNotFindRepresentationOrArrayOfRepresentationsAtKeyPath:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='RKMapperOperation*' index='0' name='mapper' type='@'/>
<arg declared_type='NSString*' index='1' name='keyPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:willStartMappingOperation:forKeyPath:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='RKMapperOperation*' index='0' name='mapper' type='@'/>
<arg declared_type='RKMappingOperation*' index='1' name='mappingOperation' type='@'/>
<arg declared_type='NSString*' index='2' name='keyPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperDidCancelMapping:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='RKMapperOperation*' index='0' name='mapper' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperDidFinishMapping:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='RKMapperOperation*' index='0' name='mapper' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperWillStartMapping:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='RKMapperOperation*' index='0' name='mapper' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKMappingOperationDataSource'>
<method selector='commitChangesForMappingOperation:error:' type='B16@0:4@8^@12' type64='B32@0:8@16^@24'>
<arg declared_type='RKMappingOperation*' index='0' name='mappingOperation' type='@'/>
<arg declared_type='NSError**' index='1' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingOperation:deleteExistingValueOfRelationshipWithMapping:error:' type='B20@0:4@8@12^@16' type64='B40@0:8@16@24^@32'>
<arg declared_type='RKMappingOperation*' index='0' name='mappingOperation' type='@'/>
<arg declared_type='RKRelationshipMapping*' index='1' name='relationshipMapping' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingOperation:targetObjectForMapping:inRelationship:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='RKMappingOperation*' index='0' name='mappingOperation' type='@'/>
<arg declared_type='RKObjectMapping*' index='1' name='mapping' type='@'/>
<arg declared_type='RKRelationshipMapping*' index='2' name='relationshipMapping' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingOperation:targetObjectForRepresentation:withMapping:inRelationship:' type='@24@0:4@8@12@16@20' type64='@48@0:8@16@24@32@40'>
<arg declared_type='RKMappingOperation*' index='0' name='mappingOperation' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='representation' type='@'/>
<arg declared_type='RKObjectMapping*' index='2' name='mapping' type='@'/>
<arg declared_type='RKRelationshipMapping*' index='3' name='relationshipMapping' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingOperationShouldCollectMappingInfo:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='RKMappingOperation*' index='0' name='mappingOperation' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingOperationShouldSetUnchangedValues:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='RKMappingOperation*' index='0' name='mappingOperation' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingOperationShouldSkipPropertyMapping:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='RKMappingOperation*' index='0' name='mappingOperation' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='RKMappingOperationDelegate'>
<method selector='mappingOperation:didConnectRelationship:toValue:usingConnection:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='RKMappingOperation*' index='0' name='operation' type='@'/>
<arg declared_type='NSRelationshipDescription*' index='1' name='relationship' type='@'/>
<arg declared_type='id' index='2' name='value' type='@'/>
<arg declared_type='RKConnectionDescription*' index='3' name='connection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFailToConnectRelationship:usingConnection:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='RKMappingOperation*' index='0' name='operation' type='@'/>
<arg declared_type='NSRelationshipDescription*' index='1' name='relationship' type='@'/>
<arg declared_type='RKConnectionDescription*' index='2' name='connection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFailWithError:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='RKMappingOperation*' index='0' name='operation' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFindValue:forKeyPath:mapping:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='RKMappingOperation*' index='0' name='operation' type='@'/>
<arg declared_type='id' index='1' name='value' type='@'/>
<arg declared_type='NSString*' index='2' name='keyPath' type='@'/>
<arg declared_type='RKPropertyMapping*' index='3' name='propertyMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didNotFindValueForKeyPath:mapping:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='RKMappingOperation*' index='0' name='operation' type='@'/>
<arg declared_type='NSString*' index='1' name='keyPath' type='@'/>
<arg declared_type='RKPropertyMapping*' index='2' name='propertyMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didNotSetUnchangedValue:forKeyPath:usingMapping:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='RKMappingOperation*' index='0' name='operation' type='@'/>
<arg declared_type='id' index='1' name='value' type='@'/>
<arg declared_type='NSString*' index='2' name='keyPath' type='@'/>
<arg declared_type='RKPropertyMapping*' index='3' name='propertyMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didSelectObjectMapping:forDynamicMapping:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='RKMappingOperation*' index='0' name='operation' type='@'/>
<arg declared_type='RKObjectMapping*' index='1' name='objectMapping' type='@'/>
<arg declared_type='RKDynamicMapping*' index='2' name='dynamicMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didSetValue:forKeyPath:usingMapping:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='RKMappingOperation*' index='0' name='operation' type='@'/>
<arg declared_type='id' index='1' name='value' type='@'/>
<arg declared_type='NSString*' index='2' name='keyPath' type='@'/>
<arg declared_type='RKPropertyMapping*' index='3' name='propertyMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:shouldSetValue:forKeyPath:usingMapping:' type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40'>
<arg declared_type='RKMappingOperation*' index='0' name='operation' type='@'/>
<arg declared_type='id' index='1' name='value' type='@'/>
<arg declared_type='NSString*' index='2' name='keyPath' type='@'/>
<arg declared_type='RKPropertyMapping*' index='3' name='propertyMapping' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='RKSerialization'>
<method class_method='true' selector='dataFromObject:error:' type='@16@0:4@8^@12' type64='@32@0:8@16^@24'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSError**' index='1' name='error' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method class_method='true' selector='objectFromData:error:' type='@16@0:4@8^@12' type64='@32@0:8@16^@24'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSError**' index='1' name='error' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RKValueTransforming'>
<method selector='transformValue:toValue:ofClass:error:' type='B24@0:4@8^@12#16^@20' type64='B48@0:8@16^@24#32^@40'>
<arg declared_type='id' index='0' name='inputValue' type='@'/>
<arg declared_type='id*' index='1' name='outputValue' type='^@'/>
<arg declared_type='Class' index='2' name='outputValueClass' type='#'/>
<arg declared_type='NSError**' index='3' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='validateTransformationFromClass:toClass:' type='B16@0:4#8#12' type64='B32@0:8#16#24'>
<arg declared_type='Class' index='0' name='inputValueClass' type='#'/>
<arg declared_type='Class' index='1' name='outputValueClass' type='#'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
</signatures>
